{"version":3,"sources":["Adapter.js","components/Navbar.js","components/FocusList.js","components/Card.js","components/CardContainer.js","components/AutoSearch.js","components/SearchForm.js","components/Home.js","components/Login.js","components/Signup.js","components/Trades.js","components/BuySellForm.js","components/StockList.js","components/StockChart.js","components/ChartContainer.js","Utility.js","components/Portfolio.js","components/MainChart.js","components/RangePicker.js","components/MainChartContainer.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["backendUrl","handleErrors","response","ok","Error","statusText","json","fetchStockQuote","symbol","fetch","fetchBatchQuote","symbols","sendTrade","trade","userID","token","url","config","method","headers","body","JSON","stringify","chartRange","getChart","range","indexOf","toLowerCase","Navbar","Component","handleItemClick","e","name","this","props","handleMenu","displayButtons","activeItem","login","Menu","Item","position","Button","active","onClick","color","style","marginLeft","logout","userName","handleLogout","render","Segment","inverted","pointing","secondary","FocusList","generateTables","colorCell","value","Table","Cell","negative","positive","stocks","map","change","changePercent","latestPrice","percent","toFixed","toString","Row","key","Date","now","Header","HeaderCell","Body","length","StockCard","data","quote","companyName","avgTotalVolume","week52High","week52Low","arrow","fontColor","Card","fluid","Content","Icon","Meta","Description","extra","CardContainer","Grid","columns","Column","etfs","resultRenderer","title","Label","content","SearchExampleStandard","state","isLoading","results","resetComponent","setState","handleResultSelect","result","setSymbol","handleSearchChange","toUpperCase","setTimeout","re","RegExp","_","escapeRegExp","output","filter","searchData","test","slice","outputName","excactOutput","blurOuput","arrayUnique","componentWillMount","Search","loading","onResultSelect","onSearchChange","debounce","leading","placeholder","input","icon","iconPosition","array","a","concat","i","j","splice","SearchForm","handleChange","event","getStockPrice","then","head","catch","d","componentDidMount","latestTime","Home","focus","serverUP","getInfo","err","console","log","interval","setInterval","componentWillUnmount","clearInterval","message","herokuMessage","className","relaxed","basic","sytle","top","Login","email","password","handleSumbit","preventDefault","user","postSessions","localStorage","setItem","backToHome","alert","Object","keys","error","handleGuestLogin","handleInput","displayMessage","message1","Message","textAlign","height","verticalAlign","maxWidth","as","Form","size","stacked","Input","onChange","type","Signup","username","passwordReenter","valid","r","postUser","checkEmail","checkPassword","validate","signupButton","disabled","Trades","trades","meta","activePage","getTrades","page","fetchUserHistory","getItem","storeData","current_page","created_at","stock_symbol","quantity","price","action","estTime","toDateString","handlePageSelect","topPages","total_pages","Pagination","onPageChange","defaultActivePage","totalPages","BuySellForm","clearState","getPeriodicUpdate","handleBuySumbit","total","validBuy","balance","handleBuy","handleSellSubmit","handleSell","handleSearchInput","parseInt","validateBuy","validateSell","buyButton","sellButton","validSell","displayQuote","displayTotal","reminder","Group","Or","StockList","cellColor","status","sort","b","localeCompare","openPrice","reduce","acc","canvasGradient","createVerticalLinearGradient","stop","hexToRGBA","AreaChart","React","width","ratio","date","beginDate","margin","left","right","bottom","seriesName","xAccessor","xScale","scaleTime","xExtents","id","yExtents","close","x1","y1","x2","y2","offset","stopColor","stopOpacity","axisAt","orient","ticks","at","displayFormat","timeFormat","format","yAccessor","fill","strokeWidth","interpolation","curveMonotoneX","defaultProps","fitWidth","ChartContainer","isDataChange","next","shouldComponentUpdate","nextProps","StockChart","parseDate","timeParse","parseData","Portfolio","constructor","context","super","isUpdateNeeded","prevProps","changed","forEach","getChartData","chartData","getPrice","getOpenPrice","storePriceToState","push","previousClose","buyStock","sym","afterTrade","validateButtons","sellStock","n","updateLatestPrice","componentDidUpdate","prevState","Divider","vertical","selected","stoAppearance","stroke","assign","StochasticSeries","CandleStickChartWithFullStochasticsIndicator","initialData","yGrid","innerTickSize","tickStrokeOpacity","xGrid","ema20","ema","options","windowSize","merge","c","accessor","ema50","slowSTO","stochasticOscillator","kWindowSize","fastSTO","fullSTO","dWindowSize","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","displayXAccessor","last","Math","max","high","low","padding","showTicks","outerTickSize","itemType","edgeAt","open","xValue","strokeDasharray","origin","volume","w","h","tickFormat","tickValues","appearance","label","RangePicker","handleClick","selectRange","generateButton","v4","MainChartContainer","MainChart","Container","userEmail","getAllSymbols","parseSymbols","userInfo","saveDataToState","checkToken","parseToken","charAt","parse","atob","split","fetchUserInfo","handleBackHome","removeItem","displayContent","App","window","innerHeight","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6QACA,MAAMA,EAAW,iDAMV,SAASC,EAAaC,GAEzB,IAAKA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAEzB,OAAOH,EAASI,OA8Db,SAASC,EAAgBC,GAE5B,OAAOC,MADKT,EAAW,aAAaQ,GAIjC,SAASE,EAAgBC,GAE5B,OAAOF,MADKT,EAAW,aAAaW,GAIjC,SAASC,EAAUC,EAAOC,EAAQC,GACrC,MAAMC,EAAMhB,EAAW,UAAUc,EACjC,IAAIG,EAAO,CACHC,OAAQ,OACRC,QAAS,CACL,cAAiBJ,EACjB,eAAgB,mBAChB,YAAa,oBAEjBK,KAAMC,KAAKC,UAAU,CAACT,WAG9B,OAAOJ,MAAMO,EAAKC,GAIf,MAAMM,EAAa,CAAC,KAAK,KAAM,KAAK,MAAM,KAAK,MAC/C,SAASC,EAAShB,EAAQiB,EAAM,OACa,IAA7CF,EAAWG,QAAQD,EAAME,iBAAuBF,EAAQ,MAC3D,MAAMT,EAAMhB,EAAW,aAAD,OAAcQ,EAAd,YAAwBiB,GAC9C,OAAOhB,MAAMO,G,+BCrGjB,MAAMY,UAAeC,YAAW,eAAD,oBAG3BC,gBAAkB,CAACC,GAAKC,UAAWC,KAAKC,MAAMC,WAAWH,GAH9B,KAK3BI,eAAe,KAAK,MACRC,EAAeJ,KAAKC,MAApBG,WACR,IAAIC,EAAS,kBAACC,EAAA,EAAKC,KAAN,CAAWC,SAAS,SACzB,kBAACC,EAAA,EAAD,CACJV,KAAK,SACLW,OAAuB,WAAfN,EACRO,QAASX,KAAKH,gBACde,MAAM,SAJF,UAOJ,kBAACH,EAAA,EAAD,CACIV,KAAK,QACLW,OAAuB,UAAfN,EACRO,QAASX,KAAKH,gBACdgB,MAAO,CAAEC,WAAY,SACrBF,MAAM,SALV,UAUAG,EAAQ,kBAACT,EAAA,EAAKC,KAAN,CAAWC,SAAS,SAApB,YACER,KAAKC,MAAMe,SACrB,kBAACP,EAAA,EAAD,CACIV,KAAK,SACLY,QAASX,KAAKC,MAAMgB,aACpBJ,MAAO,CAAEC,WAAY,OACrBF,MAAM,SAJV,WAWJ,OAAGZ,KAAKC,MAAMe,SACHD,EAEAV,GAKfa,SAAU,MACEd,EAAeJ,KAAKC,MAApBG,WACR,OACI,6BACA,kBAACe,EAAA,EAAD,CAASC,UAAQ,GACb,kBAACd,EAAA,EAAD,CAAMc,UAAQ,EAACC,UAAQ,EAACC,WAAS,GACjC,kBAAChB,EAAA,EAAKC,KAAN,CAAWR,KAAK,OAAOW,OAAuB,SAAfN,EAAuBO,QAASX,KAAKH,kBACpE,kBAACS,EAAA,EAAKC,KAAN,CACIR,KAAK,YACLW,OAAuB,cAAfN,EACRO,QAASX,KAAKH,kBAElB,kBAACS,EAAA,EAAKC,KAAN,CACIR,KAAK,SACLW,OAAuB,WAAfN,EACRO,QAASX,KAAKH,kBAElB,kBAACS,EAAA,EAAKC,KAAN,CACIR,KAAK,SACLW,OAAuB,WAAfN,EACRO,QAASX,KAAKH,kBASjBG,KAAKG,qBAWPR,Q,kBCrFf,MAAM4B,UAAkB3B,YAAW,eAAD,oBAC9B4B,eAAe,KACX,MAAMC,EAAY,CAACb,EAAOc,IACV,aAATd,EAA4B,kBAACe,EAAA,EAAMC,KAAP,CAAYC,UAAQ,GAAEH,GACzC,aAATd,EAA4B,kBAACe,EAAA,EAAMC,KAAP,CAAYE,UAAQ,GAAEJ,GAC9C,kBAACC,EAAA,EAAMC,KAAP,KAAcF,GAI1B,OAAQ1B,KAAKC,MAAM8B,OAAOC,IAAIlC,IAAG,MAErBvB,EAA8CuB,EAA9CvB,OAAQ0D,EAAsCnC,EAAtCmC,OAAQC,EAA8BpC,EAA9BoC,cAAeC,EAAerC,EAAfqC,YACtC,IAAIC,GAAyB,IAAdF,GAAmBG,QAAQ,GAAGC,WAAW,IACpD1B,EAAQqB,EAAO,EAAI,WAAW,WAElC,OADc,IAAXA,IAAcrB,EAAM,QAChB,kBAACe,EAAA,EAAMY,IAAP,CAAWC,IAAKC,KAAKC,MAAMnE,GACjCkD,EAAUb,EAAOrC,GACjBkD,EAAUb,EAAOqB,GACjBR,EAAUb,EAAOwB,GACjBX,EAAUb,EAAOuB,OAK1BjB,SACI,OACI,6BACI,+CACA,kBAACS,EAAA,EAAD,KACA,kBAACA,EAAA,EAAMgB,OAAP,KACI,kBAAChB,EAAA,EAAMY,IAAP,KACI,kBAACZ,EAAA,EAAMiB,WAAP,eACA,kBAACjB,EAAA,EAAMiB,WAAP,mBACA,kBAACjB,EAAA,EAAMiB,WAAP,gBACA,kBAACjB,EAAA,EAAMiB,WAAP,mBAGJ,kBAACjB,EAAA,EAAMkB,KAAP,KACC7C,KAAKC,MAAM8B,OAAOe,OAAS,EAAG9C,KAAKwB,iBAAiB,SAS1DD,Q,iBChDf,MAAMwB,UAAkBnD,YACpBsB,SACI,GAAGlB,KAAKC,MAAM+C,KAAK,CAAC,MAAD,EACyEhD,KAAKC,MAAM+C,KAAKC,MAAjGC,EADQ,EACRA,YAAaf,EADL,EACKA,YAAa5D,EADlB,EACkBA,OAAQ0D,EAD1B,EAC0BA,OAAQkB,EADlC,EACkCA,eAAeC,EADjD,EACiDA,WAAWC,EAD5D,EAC4DA,UAC3E,IAAIC,EAAQrB,EAAQ,EAAG,aAAc,WACjCrB,EAAQqB,EAAQ,EAAG,MAAO,QAChB,IAAXA,IACCrB,EAAM,QACN0C,EAAQ,IAEZ,MAAMC,EAAY,CAAC3C,SACnB,OACI,kBAAC4C,EAAA,EAAD,CAAM5C,MAAOA,EAAO6C,OAAK,GACzB,kBAACD,EAAA,EAAKE,QAAN,KACA,kBAACF,EAAA,EAAKb,OAAN,CAAa9B,MAAO0C,GAApB,IAEEpB,EAFF,IAEgB5D,EAFhB,KAE0B0D,EACtB,kBAAC0B,EAAA,EAAD,CAAM5D,KAAMuD,KAEhB,kBAACE,EAAA,EAAKI,KAAN,KACI,8CAAqBR,EAArB,QAAsCC,IAE1C,kBAACG,EAAA,EAAKK,YAAN,KAAmBX,IAEnB,kBAACM,EAAA,EAAKE,QAAN,CAAcI,OAAK,GAAnB,WACaX,IAKjB,OACI,+BAMDJ,QCpCf,MAAMgB,UAAsBnE,YAExBsB,SAEI,OACI,6BACI,0CACA,kBAAC8C,EAAA,EAAD,CAAMC,QAAS,GACX,kBAACD,EAAA,EAAKzB,IAAN,KACA,kBAACyB,EAAA,EAAKE,OAAN,KACA,kBAAC,EAAD,CAAMlB,KAAOhD,KAAKC,MAAMkE,KAAX,OAGb,kBAACH,EAAA,EAAKE,OAAN,KACA,kBAAC,EAAD,CAAMlB,KAAOhD,KAAKC,MAAMkE,KAAX,QAIb,kBAACH,EAAA,EAAKzB,IAAN,KACA,kBAACyB,EAAA,EAAKE,OAAN,KACA,kBAAC,EAAD,CAAMlB,KAAMhD,KAAKC,MAAMkE,KAAX,OAEZ,kBAACH,EAAA,EAAKE,OAAN,KACA,kBAAC,EAAD,CAAMlB,KAAMhD,KAAKC,MAAMkE,KAAX,WAYjBJ,Q,oDChCf,MAAMK,EAAiB,EAAGC,QAAOtE,UAAW,kBAACuE,EAAA,EAAD,CAAOC,QAAO,UAAKF,EAAM,IAAItE,KAO1D,MAAMyE,UAA8B5E,YAAW,eAAD,oBACzD6E,MAAM,CACFC,WAAW,EACXC,QAAS,GACTjD,MAAO,IAJ8C,KAW3DkD,eAAiB,IAAM5E,KAAK6E,SAAS,CAAEH,WAAW,EAAOC,QAAS,GAAIjD,MAAO,KAXlB,KAa3DoD,mBAAqB,CAAChF,GAAKiF,aACzB/E,KAAK6E,SAAS,CAAEnD,MAAOqD,EAAOV,QAC9BrE,KAAKC,MAAM+E,UAAUD,EAAOV,QAf6B,KAkB3DY,mBAAqB,CAACnF,GAAK4B,YACzB1B,KAAK6E,SAAS,CAAEH,WAAW,EAAMhD,MAAMA,EAAMwD,gBAC7ClF,KAAKC,MAAM+E,UAAUtD,GAErByD,WAAW,KACT,GAAInF,KAAKyE,MAAM/C,MAAMoB,OAAS,EAAG,OAAO9C,KAAK4E,iBAE7C,MAAMQ,EAAK,IAAIC,OAAOC,IAAEC,aAAavF,KAAKyE,MAAM/C,OAAQ,KAKlD8D,EAASF,IAAEG,OAAOzF,KAAKC,MAAMyF,WAJnBX,GAAUK,EAAGO,KAAKZ,EAAOV,QAIeuB,MAAM,EAAE,GAC1DC,EAAaP,IAAEG,OAAOzF,KAAKC,MAAMyF,WAJnBX,GAAUK,EAAGO,KAAKZ,EAAOhF,OAImB6F,MAAM,EAAE,GAClEE,EAAeR,IAAEG,OAAOzF,KAAKC,MAAMyF,WAJtBX,GAAUA,EAAOV,QAAUrE,KAAKyE,MAAM/C,OAMnDqE,EAAYC,EAAY,IAAIR,KAAWK,IAAaD,MAAM,EAAE,GAElE5F,KAAK6E,SAAS,CACZH,WAAW,EACXC,QAASqB,EAAY,IAAIF,KAAiBC,OAE3C,MAjCLE,qBACEjG,KAAK4E,iBAqCP1D,SAAU,MAAD,EAC+BlB,KAAKyE,MAAnCC,EADD,EACCA,UAAWhD,EADZ,EACYA,MAAOiD,EADnB,EACmBA,QAC1B,OACM,kBAACuB,EAAA,EAAD,CAAQzC,OAAK,EACX0C,QAASzB,EACT0B,eAAgBpG,KAAK8E,mBACrBuB,eAAgBf,IAAEgB,SAAStG,KAAKiF,mBAAoB,IAAK,CAAEsB,SAAS,IACpE5B,QAASA,EACTjD,MAAOA,EACP0C,eAAgBA,EAChBoC,YAAa,sBACbC,MAAO,CAAEC,KAAM,SAAUC,aAAc,WAOnD,SAASX,EAAYY,GAEnB,IADA,IAAIC,EAAID,EAAME,SACNC,EAAE,EAAGA,EAAEF,EAAE/D,SAAUiE,EACvB,IAAI,IAAIC,EAAED,EAAE,EAAGC,EAAEH,EAAE/D,SAAUkE,EACtBH,EAAEE,KAAOF,EAAEG,IACVH,EAAEI,OAAOD,IAAK,GAI1B,OAAOH,EC9ET,MAAMK,UAAmBtH,YAAW,eAAD,oBAC/B6E,MAAM,CACFlG,OAAO,OACP0E,MAAM,MAHqB,KAU/BkE,aAAa,CAACC,GAAQ1F,YAClB1B,KAAK6E,SAAS,CAACtG,OAAOmD,EAAMwD,eAAgBlF,KAAKqH,gBAXtB,KAc/BA,cAAgBf,IAAS,KACrBhI,EAAgB0B,KAAKyE,MAAMlG,QACtB+I,KAAKtJ,GACLsJ,KAAKtE,IACc,MAAbA,EAAKuE,KACJvH,KAAK6E,SAAS,CAAC5B,MAAMD,IAErBhD,KAAK6E,SAAS,CAAC5B,MAAM,gBAE1BuE,MAAOC,GAAIzH,KAAK6E,SAAS,CAAC5B,MAAM,gBAExC,KAzB4B,KA2B/B+B,UAAWzG,IACPyB,KAAK6E,SAAS,CAACtG,UAAQyB,KAAKqH,gBAtBhCK,oBACI1H,KAAKqH,gBAyBTnG,SACI,GAAsB,OAAnBlB,KAAKyE,MAAMxB,OAAoC,cAApBjD,KAAKyE,MAAMxB,MAAsB,IAAD,EACmBjD,KAAKyE,MAAMxB,MAAlFG,EADoD,EACpDA,WAAYC,EADwC,EACxCA,UAAWH,EAD6B,EAC7BA,YAAaf,EADgB,EAChBA,YAAaF,EADG,EACHA,OAAQ0F,EADL,EACKA,WAEnE,IAAIrE,EAAQrB,EAAQ,EAAG,aAAc,WACjCrB,EAAQqB,EAAQ,EAAG,MAAO,QAChB,IAAXA,IACCrB,EAAM,QACN0C,EAAQ,IAGZ,MAAMC,EAAY,CAAC3C,SAEnB,OACI,kBAAC4C,EAAA,EAAD,CAAMC,OAAK,EAAC7C,MAAOA,GACnB,kBAAC4C,EAAA,EAAKE,QAAN,KACA,kBAACF,EAAA,EAAKb,OAAN,CAAa9B,MAAO0C,GACpB,kBAAC,EAAD,CACImC,WAAY1F,KAAKC,MAAMyF,WACvBV,UAAWhF,KAAKgF,YAHpB,WAKa7C,EALb,aAKoCF,EALpC,IAK4C,kBAAC0B,EAAA,EAAD,CAAM5D,KAAMuD,KAExD,kBAACE,EAAA,EAAKI,KAAN,KACQ,+CAAsBR,EAAtB,QAAuCC,IAE3C,kBAACG,EAAA,EAAKK,YAAN,iBAA4BX,EAA5B,MAA4CyE,MAQ7CT,QCnEf,MAAMU,UAAahI,YAAW,eAAD,oBACzB6E,MAAM,CACFoD,MAAM,GACN1D,KAAK,GACL2D,UAAS,GAJY,KAiBzBC,QAAQ,KPuFDvJ,MADKT,4DOrFGuJ,KAAKtJ,GAAcsJ,KAAKtE,GAAQhD,KAAK6E,SAAS,CAACgD,MAAM7E,KAAQwE,MAAOQ,GAAOC,QAAQC,IAAI,SAAUF,IAC5GvJ,EAAgB,CAAC,MAAO,MAAO,MAAO,QACjC6I,KAAKtJ,GACLsJ,KAAKtE,GAAQhD,KAAK6E,SAAS,CAACV,KAAKnB,EAAM8E,UAAS,KAChDN,MAAMC,GAAGQ,QAAQC,IAAI,uBAf9BR,oBACI1H,KAAK+H,UACL/H,KAAKmI,SAAUC,YAAYpI,KAAK+H,QAAU,KAG9CM,uBACIC,cAActI,KAAKmI,UAYvBjH,SACI,MAAMF,EAAWhB,KAAKC,MAAMpB,OAASmB,KAAKC,MAAMe,SAAW,QACrDuH,EAASvI,KAAKC,MAAMpB,OACpB,oBACA,oDACA2J,EAAgBxI,KAAKyE,MAAMqD,SAAW,KAAO,+CACnD,OACI,yBAAKW,UAAU,kBACX,wCACczH,EADd,KAGA,4BACKuH,EACAC,GAGL,kBAACxE,EAAA,EAAD,CAAMC,QAAS,EAAGyE,SAAO,GACrB,kBAAC1E,EAAA,EAAKE,OAAN,KACA,kBAAC/C,EAAA,EAAD,CAASwH,OAAK,GACd,kBAAC,EAAD,CAAW5G,OAAQ/B,KAAKyE,MAAMoD,UAI9B,kBAAC7D,EAAA,EAAKE,OAAN,KACI,2CACA,kBAAC,EAAD,CAAYwB,WAAY1F,KAAKC,MAAMyF,WAAYkD,MAAO,CAACC,IAAI,SAE3D,kBAAC,EAAD,CAAe1E,KAAMnE,KAAKyE,MAAMN,WAQzCyD,Q,2BC/Df,MAAMkB,UAAclJ,YAAW,eAAD,oBAC1B6E,MAAM,CACFsE,MAAM,GACNC,SAAS,GACTT,QAAQ,MAJc,KAgB1BU,aAAc7B,IACVA,EAAM8B,iBACNjB,QAAQC,IAAIlI,KAAKyE,OAFC,QAGQzE,KAAKyE,ORMhC,SAAsB0E,GAEzB,IAAInK,EAAO,CACPC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,YAAa,oBAEjBC,KAAMC,KAAKC,UAAU8J,IAEzB,OAAO3K,MATKT,yDASKiB,IQXboK,CAJU,CACNL,MALc,EAGXA,MAGHC,SANc,EAGJA,WAKK1B,KAAKtH,KAAKhC,cAAcsJ,KAAMG,IAC7CQ,QAAQC,IAAIT,GACTA,EAAE3I,OACDuK,aAAaC,QAAQ,QAAS7B,EAAE3I,OAChCkB,KAAKC,MAAMsJ,cAEXC,MAAMC,OAAOC,KAAKjC,GAAG,IAAKA,EAAEgC,OAAOC,KAAKjC,OAE3CD,MAAOmC,IACR3J,KAAK6E,SAAS,CAAC0D,QAAQ,iCAjCL,KAsC1BqB,iBAAkBxC,IACdA,EAAM8B,iBACNlJ,KAAK6E,SAAS,CAACkE,MAAM,kBAAmBC,SAAS,SAAU,IAAIhJ,KAAKiJ,aAAa7B,KAxC3D,KAmD1ByC,YAAc,CAACzC,GAAS1F,QAAO3B,WAG3BC,KAAK6E,SAAS,CAAC,CAAC9E,GAAM2B,EAAO6G,QADf,QArDQ,KAyD1BuB,eAAe,KACX,IAAIC,EAAW,kBAACC,EAAA,EAAD,CAASpJ,MAAM,OACzBZ,KAAKyE,MAAM8D,SAEhB,OAAOvI,KAAKyE,MAAM8D,QAASwB,EAAU,MAtDzC1B,uBACIrI,KAAK6E,SAAS,CACVkE,MAAM,GACNC,SAAS,GACTT,QAAQ,OAgChBvK,aAAaC,GAET,GADAgK,QAAQC,IAAIjK,IACPA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAEzB,OAAOH,EAASI,OAgBpB6C,SAAU,MAAD,EACqBlB,KAAKyE,MAAxBsE,EADF,EACEA,MAAOC,EADT,EACSA,SACd,OACI,yBAAKP,UAAU,cAEf,kBAACzE,EAAA,EAAD,CAAMiG,UAAU,SAASpJ,MAAO,CAAEqJ,OAAQ,QAAUC,cAAc,UAChE,kBAACnG,EAAA,EAAKE,OAAN,CAAarD,MAAO,CAAEuJ,SAAU,MAC9B,kBAACzH,EAAA,EAAD,CAAQ0H,GAAG,KAAKzJ,MAAM,QAAQqJ,UAAU,UAAxC,gBAGA,kBAACK,EAAA,EAAD,CAAMC,KAAK,SACT,kBAACpJ,EAAA,EAAD,CAASqJ,SAAO,GACd,kBAACF,EAAA,EAAKG,MAAN,CAAYhH,OAAK,EAACiD,KAAK,OACvBhF,MAAOqH,EACP2B,SAAU1K,KAAK6J,YACflD,aAAa,OACbH,YAAY,iBACZzG,KAAK,UACL,kBAACuK,EAAA,EAAKG,MAAN,CACEhH,OAAK,EACLiD,KAAK,OACLC,aAAa,OACbH,YAAY,WACZmE,KAAK,WACLD,SAAU1K,KAAK6J,YACf9J,KAAK,WACL2B,MAAOsH,IAIT,kBAACvI,EAAA,EAAD,CAAQG,MAAM,QAAQ6C,OAAK,EAAC8G,KAAK,QAAQ5J,QAASX,KAAKiJ,cAAvD,SAGA,6BACA,kBAACxI,EAAA,EAAD,CAAQG,MAAM,OAAO6C,OAAK,EAAC8G,KAAK,QAAQ5J,QAASX,KAAK4J,kBAAtD,sBAKH5J,KAAK8J,qBAQPhB,QC/Gf,MAAM8B,UAAehL,YAAW,eAAD,oBAC3B6E,MAAM,CACFsE,MAAM,GACN8B,SAAS,GACT7B,SAAS,GACT8B,gBAAgB,GAChBvC,QAAQ,KACRwC,OAAM,GAPiB,KAqB3B9B,aAAc7B,IACVA,EAAM8B,iBACNjB,QAAQC,IAAIlI,KAAKyE,OAFC,QAGmBzE,KAAKyE,OTZ3C,SAAkB0E,GAErB,IAAInK,EAAO,CACPC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,YAAa,oBAEjBC,KAAMC,KAAKC,UAAU8J,IAEzB,OAAO3K,MATKT,sDASKiB,GAAQsI,KAAK0D,GAAKA,EAAE3M,SSQjC4M,CALU,CACNlC,MALc,EAGXA,MAGH8B,SANc,EAGHA,SAIX7B,SAPc,EAGOA,WAMV1B,KAAKtH,KAAKhC,cAAcsJ,KAAMG,IACzCQ,QAAQC,IAAIT,GACTA,EAAE3I,OACDuK,aAAaC,QAAQ,QAAS7B,EAAE3I,OAEhCkB,KAAKC,MAAMsJ,cAEXC,MAAMC,OAAOC,KAAKjC,GAAG,IAAKA,EAAEgC,OAAOC,KAAKjC,OAE3CD,MAAOmC,IACR3J,KAAK6E,SAAS,CAAC0D,QAAQ,6BAxCJ,KAoD3BsB,YAAc,CAACzC,GAAS1F,QAAO3B,WAE3B,IAAIwI,EAAU,KAEXvI,KAAKkL,aACJ3C,EAAU,0BACkB,KAAvBvI,KAAKyE,MAAMuE,SAChBT,EAAU,6BACLvI,KAAKmL,kBACV5C,EAAU,gCAGdvI,KAAK6E,SAAS,CAAC,CAAC9E,GAAM2B,EAAO6G,WAAUvI,KAAKoL,WAhErB,KAmE3BA,SAAS,KACiB,KAAnBpL,KAAKyE,MAAMsE,OACe,KAAtB/I,KAAKyE,MAAMuE,UACXhJ,KAAKyE,MAAMuE,WAAahJ,KAAKyE,MAAMqG,gBACtC9K,KAAK6E,SAAS,CAACkG,OAAM,EAAMxC,QAAQ,KAEnCvI,KAAK6E,SAAS,CAACkG,OAAM,KAzEF,KA4E3BjB,eAAe,KACX,IAAIC,EAAW,kBAACC,EAAA,EAAD,CAASpJ,MAAM,OACzBZ,KAAKyE,MAAM8D,SAEhB,OAAOvI,KAAKyE,MAAM8D,QAASwB,EAAU,MAhFd,KAmF3BoB,cAAc,IACHnL,KAAKyE,MAAMuE,WAAWhJ,KAAKyE,MAAMqG,gBApFjB,KAwF3BI,WAAW,IACqB,KAArBlL,KAAKyE,MAAMsE,MAzFK,KA4F3BsC,aAAa,IACNrL,KAAKyE,MAAMsG,MACH,kBAACtK,EAAA,EAAD,CAAQG,MAAM,QAAQ6C,OAAK,EAAC8G,KAAK,QAAQ5J,QAASX,KAAKiJ,cAAvD,WAEJ,kBAACxI,EAAA,EAAD,CAAQ6K,UAAQ,EAAC1K,MAAM,QAAQ6C,OAAK,EAAC8G,KAAK,QAAQ5J,QAASX,KAAKiJ,cAAhE,WAtFXZ,uBACIrI,KAAK6E,SAAS,CACVkE,MAAM,GACN8B,SAAS,GACT7B,SAAS,GACT8B,gBAAgB,GAChBvC,QAAQ,GACRwC,OAAM,IA2Bd/M,aAAaC,GAET,GADAgK,QAAQC,IAAIjK,IACPA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAEzB,OAAOH,EAoDXiD,SAAU,MAAD,EACiDlB,KAAKyE,MAApDsE,EADF,EACEA,MAAQ8B,EADV,EACUA,SAAU7B,EADpB,EACoBA,SAAU8B,EAD9B,EAC8BA,gBACnC,OACI,yBAAKrC,UAAU,eAEf,kBAACzE,EAAA,EAAD,CAAMiG,UAAU,SAASpJ,MAAO,CAAEqJ,OAAQ,QAASC,cAAc,UAC/D,kBAACnG,EAAA,EAAKE,OAAN,CAAarD,MAAO,CAAEuJ,SAAU,MAC9B,kBAACzH,EAAA,EAAD,CAAQ0H,GAAG,KAAKzJ,MAAM,QAAQqJ,UAAU,UAAxC,mBAGA,kBAACK,EAAA,EAAD,CAAMC,KAAK,SACT,kBAACpJ,EAAA,EAAD,CAASqJ,SAAO,GACd,kBAACF,EAAA,EAAKG,MAAN,CAAYhH,OAAK,EAACiD,KAAK,OACnB3G,KAAK,QACL4G,aAAa,OACbH,YAAY,iBACZkE,SAAU1K,KAAK6J,YACfnI,MAAOqH,IACX,kBAACuB,EAAA,EAAKG,MAAN,CAAYhH,OAAK,EAACiD,KAAK,OACnB3G,KAAK,WACL4G,aAAa,OACbH,YAAY,OACZkE,SAAU1K,KAAK6J,YACfnI,MAAOmJ,IACX,kBAACP,EAAA,EAAKG,MAAN,CACEhH,OAAK,EACL1D,KAAK,WACL2G,KAAK,OACLC,aAAa,OACbH,YAAY,WACZkE,SAAU1K,KAAK6J,YACfc,KAAK,WACLjJ,MAAOsH,IAGT,kBAACsB,EAAA,EAAKG,MAAN,CACEhH,OAAK,EACL1D,KAAK,kBACL2G,KAAK,OACLC,aAAa,OACbH,YAAY,wBACZkE,SAAU1K,KAAK6J,YACfc,KAAK,WACLjJ,MAAOoJ,IAGR9K,KAAKqL,iBAGTrL,KAAK8J,qBAUPc,Q,SC/Jf,MAAMW,UAAe3L,YAAW,eAAD,oBAC3B6E,MAAM,CACF+G,OAAO,GACPC,KAAK,GACLC,WAAW,GAJY,KAmB3B1N,aAAgBC,IAChB,IAAKA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAEzB,OAAOH,EAASI,QAvBW,KA0B3BsN,UAAU,CAACC,EAAK,MVwBb,SAA0B9M,EAAOD,EAAQ+M,GAU5C,OAAOpN,MATKT,EAAW,UAAUc,EAAQ,SAAU+M,EACxC,CACH3M,OAAQ,MACRC,QAAS,CACL,cAAiBJ,EACjB,eAAgB,mBAChB,YAAa,uBU5BrB+M,CAFcxC,aAAayC,QAAQ,SAEX9L,KAAKC,MAAMpB,OAAQ+M,GACtCtE,KAAKtH,KAAKhC,cACVsJ,KAAKtH,KAAK+L,WACVvE,MAAM,IAAKS,QAAQC,IAAI,WAhCL,KAmC3B6D,UAAW/I,IACPhD,KAAK6E,SAAS,CAAC2G,OAAOxI,EAAKwI,OAAQC,KAAKzI,EAAKyI,KAAMC,WAAW1I,EAAKyI,KAAKO,gBApCjD,KAuC3BxK,eAAe,IACJxB,KAAKyE,MAAM+G,OAAOxJ,IAAIlC,IAAI,IACxBmM,EAAqDnM,EAArDmM,WAAYC,EAAyCpM,EAAzCoM,aAAcC,EAA2BrM,EAA3BqM,SAAUC,EAAiBtM,EAAjBsM,MAAOC,EAAUvM,EAAVuM,OAE5CC,EAAU,IAAI7J,KAAKwJ,GACvB,OAAO,kBAACtK,EAAA,EAAMY,IAAP,CAAWC,IAAMC,KAAKC,MAAMwJ,EAAaC,EAASF,GAC7D,kBAACtK,EAAA,EAAMC,KAAP,KAAa0K,EAAQC,gBACrB,kBAAC5K,EAAA,EAAMC,KAAP,KAAasK,GACb,kBAACvK,EAAA,EAAMC,KAAP,KAAauK,GACb,kBAACxK,EAAA,EAAMC,KAAP,KAAawK,GACb,kBAACzK,EAAA,EAAMC,KAAP,KAAayK,MAjDU,KAsD3BG,iBAAiB,CAACpF,GAAQsE,iBACtB1L,KAAK2L,UAAUD,IAvDQ,KA0D3Be,SAAWjK,GACJxC,KAAKyE,MAAMgH,KAAKiB,aAAe1M,KAAKyE,MAAMgH,KAAKiB,YAAc,EACrD,kBAACC,EAAA,EAAD,CAAYnK,IAAKA,EAChBoK,aAAc5M,KAAKwM,iBACnBK,kBAAmB7M,KAAKyE,MAAMgH,KAAKO,aACnCc,WAAY9M,KAAKyE,MAAMgH,KAAKiB,cAEjC,KA1DXhF,oBACI1H,KAAK2L,YAGTtD,uBACIrI,KAAK6E,SAAS,CACV2G,OAAO,GACPC,KAAK,GACLC,WAAW,IAqDnBxK,SACI,OACI,yBAAKuH,UAAU,gBACX,6CAGCzI,KAAKyM,SAAS,kBACf,kBAAC9K,EAAA,EAAD,KACI,kBAACA,EAAA,EAAMgB,OAAP,KACA,kBAAChB,EAAA,EAAMY,IAAP,KACI,kBAACZ,EAAA,EAAMiB,WAAP,aACA,kBAACjB,EAAA,EAAMiB,WAAP,eACA,kBAACjB,EAAA,EAAMiB,WAAP,eACA,kBAACjB,EAAA,EAAMiB,WAAP,iBACA,kBAACjB,EAAA,EAAMiB,WAAP,mBAIJ,kBAACjB,EAAA,EAAMkB,KAAP,KACK7C,KAAKyE,MAAM+G,OAAO1I,OAAO,EAAI9C,KAAKwB,iBAAiB,OAGvDxB,KAAKyM,SAAS,qBAQpBlB,Q,iBCjGf,MAAMwB,WAAoBnN,YAAW,eAAD,oBAChC6E,MAAM,CACFlG,OAAO,GACP4N,SAAS,EACT5D,QAAQ,KACR6D,MAAM,KACNrB,OAAM,GANsB,KAmBhCiC,WAAW,KACPhN,KAAK6E,SAAS,CACVtG,OAAO,GACP4N,SAAS,EACT5D,QAAQ,KACR6D,MAAM,KACNrB,OAAM,KAzBkB,KA6BhCkC,kBAAkB,KACXjN,KAAKyE,MAAMsG,OAA6B,KAApB/K,KAAKyE,MAAMlG,QAE9ByB,KAAKqH,iBAhCmB,KAoChCA,cAAcf,IAAS,KAEnBhI,EAAgB0B,KAAKyE,MAAMlG,QACtB+I,KAAKtJ,GACLsJ,KAAKtE,IACF,GAAgB,MAAbA,EAAKuE,KAAY,CAChB,IAAIgB,EAAU,YAAYvF,EAAKE,YAAa,uBAAyBF,EAAKb,YAE1EnC,KAAK6E,SAAS,CAAC0D,UAAS6D,MAAMpJ,EAAKb,YAAa4I,OAAM,SAEtD/K,KAAK6E,SAAS,CAACkG,OAAM,EAAMxC,QAAQ,SAExCf,MAAOC,GAAIzH,KAAK6E,SAAS,CAACkG,OAAM,EAAOxC,QAAQ,SAEvD,KAlD6B,KAqDhC2E,gBAAgB,KACZ,IAAIC,EAAQnN,KAAKyE,MAAM2H,MAAMpM,KAAKyE,MAAM0H,SACrCnM,KAAKC,MAAMmN,UAAYD,EAAQnN,KAAKC,MAAMoN,SAAWrN,KAAKyE,MAAMsG,OAC/D/K,KAAKC,MAAMqN,UAAUtN,KAAKyE,MAAMlG,OAAQyB,KAAKyE,MAAM0H,SAAUnM,KAAKyE,MAAM2H,QAxDhD,KA4DhCmB,iBAAiB,KACbvN,KAAKC,MAAMuN,WAAWxN,KAAKyE,MAAMlG,OAAQyB,KAAKyE,MAAM0H,SAAUnM,KAAKyE,MAAM2H,QA7D7C,KAgEhCqB,kBAAmB/L,IACF,KAAVA,GAAa1B,KAAKqH,gBACrB3F,EAAMA,EAAMwD,cACZlF,KAAK6E,SAAS,CAACtG,OAAOmD,GAAQ1B,KAAKoL,WAnEP,KAsEhCvB,YAAc,CAACzC,GAAS1F,QAAO3B,WAE3B,OAAQA,GACJ,IAAK,SACY,KAAV2B,GAAa1B,KAAKqH,gBACrB3F,EAAMA,EAAMwD,cACZ,MACJ,IAAK,WAGGxD,EAFQ,WACHiE,KAAKjE,GACHgM,SAAShM,GAET,GAMnB1B,KAAK6E,SAAS,CAAC,CAAC9E,GAAM2B,GAAQ1B,KAAKoL,WAxFP,KA2FhCA,SAAS,KACLpL,KAAKC,MAAM0N,YAAY3N,KAAKyE,MAAMlG,OAAQyB,KAAKyE,MAAM0H,SAAUnM,KAAKyE,MAAM2H,OAC1EpM,KAAKC,MAAM2N,aAAa5N,KAAKyE,MAAMlG,OAAQyB,KAAKyE,MAAM0H,WA7F1B,KAiGhC0B,UAAU,IACH7N,KAAKyE,MAAMsG,OAAS/K,KAAKC,MAAMmN,SACvB,kBAAC3M,EAAA,EAAD,CAAQqB,UAAQ,EAACnB,QAASX,KAAKkN,iBAA/B,OACJ,kBAACzM,EAAA,EAAD,CAAQqB,UAAQ,EAACwJ,UAAQ,GAAzB,OApGqB,KAsGhCwC,WAAW,IAEJ9N,KAAKC,MAAM8N,UACH,kBAACtN,EAAA,EAAD,CAAQoB,UAAQ,EAAClB,QAASX,KAAKuN,kBAA/B,QAEJ,kBAAC9M,EAAA,EAAD,CAAQoB,UAAQ,EAACyJ,UAAQ,GAAzB,QA3GqB,KA8GhCxB,eAAiB,KACb,IAAIC,EAAW,kBAACC,EAAA,EAAD,CAASpJ,MAAM,OAAf,wBAGf,OAAQZ,KAAKyE,MAAMsG,OAA2B,KAApB/K,KAAKyE,MAAMlG,OAAuB,KAAVwL,GAlHtB,KAsHhCiE,aAAa,KACT,IAAIjE,EAAW,kBAACC,EAAA,EAAD,CAASpJ,MAAM,SACzBZ,KAAKyE,MAAM8D,SAEpB,OAAOvI,KAAKyE,MAAMsG,MAAOhB,EAAU,MA1HH,KA6HhCkE,aAAa,KACT,IAAId,EAAQnN,KAAKyE,MAAM2H,MAAMpM,KAAKyE,MAAM0H,SACpCvL,EAAQuM,EAAQnN,KAAKC,MAAMoN,QAAU,MAAQ,QAC7Ca,EAAoB,QAATtN,EAAiB,qBAAuB,KACnDmJ,EAAW,kBAACC,EAAA,EAAD,CAASpJ,MAAOA,GAAhB,iBACIuM,EAAM9K,QAAQ,GADlB,IACuB6L,GAEtC,OAAOlO,KAAKyE,MAAMsG,MAAOhB,EAAU,MA3HvCrC,oBACI1H,KAAKmI,SAAWC,YAAYpI,KAAKiN,kBAAmB,KAGxD5E,uBACIC,cAActI,KAAKmI,UACnBnI,KAAKgN,aAwHT9L,SAAU,MACCiL,EAAYnM,KAAKyE,MAAjB0H,SACDkB,EAAUrN,KAAKC,MAAMoN,QAAUrN,KAAKC,MAAMoN,QAAQhL,QAAQ,GAAK,EACrE,OACI,yBAAKoG,UAAU,iBACV,kBAACzE,EAAA,EAAD,CAAMiG,UAAU,SAASpJ,MAAO,CAAEqJ,OAAQ,QAAUC,cAAc,UACrE,kBAACnG,EAAA,EAAKE,OAAN,CAAarD,MAAO,CAAEuJ,SAAU,IAAKF,OAAO,MAC1C,kBAACvH,EAAA,EAAD,CAAQ0H,GAAG,KAAKzJ,MAAM,QAAQqJ,UAAU,UAAxC,kBACmBoD,GAEnB,kBAAC/C,EAAA,EAAD,CAAMC,KAAK,SAGP,kBAAC,EAAD,CAAY9G,OAAK,EACbiC,WAAY1F,KAAKC,MAAMyF,WACvBV,UAAWhF,KAAKyN,oBALxB,oBAQqB,kBAACnD,EAAA,EAAKG,MAAN,CACfhH,OAAK,EACLiD,KAAK,SACLC,aAAa,OACbH,YAAY,mBACZkE,SAAU1K,KAAK6J,YACf9J,KAAK,WACL4K,KAAK,UACLjJ,MAAOyK,IAIP,kBAAC1L,EAAA,EAAO0N,MAAR,CAAc1K,OAAK,GAChBzD,KAAK6N,YACN,kBAACpN,EAAA,EAAO2N,GAAR,MACCpO,KAAK8N,eAKb9N,KAAK8J,iBACL9J,KAAKgO,eACLhO,KAAKiO,mBASPlB,UC3Lf,MAAMsB,WAAkBzO,YAAW,eAAD,oBAE9B4B,eAAe,KACX,MAAM8M,EAAY,CAACC,EAAQ7M,KACvB,OAAQ6M,GACJ,IAAK,WACD,OAAO,kBAAC5M,EAAA,EAAMC,KAAP,CAAYE,UAAQ,GAAEJ,GAEjC,IAAK,WACD,OAAO,kBAACC,EAAA,EAAMC,KAAP,CAAYC,UAAQ,GAAEH,GAEjC,QACI,OAAO,kBAACC,EAAA,EAAMC,KAAP,KAAaF,KAKjC,OAAO1B,KAAKC,MAAM8B,OAAOyM,KAFA,CAAC3H,EAAE4H,IAAM5H,EAAEqF,aAAawC,cAAcD,EAAEvC,eAElBlK,IAAKlC,IAC/C,IAAIsM,EAIAA,EAHAA,EAGQpM,KAAKC,MAAMkC,YAAYrC,EAAEoM,cAAc/J,YAFvCrC,EAAEsM,MAId,IAAImC,EAAS,GAIjB,OAHOnC,EAAQtM,EAAE6O,UAAWJ,EAAO,WACvBnC,EAAQtM,EAAE6O,YAAWJ,EAAO,YAEjC,kBAAC5M,EAAA,EAAMY,IAAP,CAAWC,IAAKC,KAAKC,MAAM5C,EAAEoM,cAC/BoC,EAAUC,EAAQzO,EAAEoM,cACpBoC,EAAUC,EAAQzO,EAAEqM,UACpBmC,EAAUC,EAAQzO,EAAE6O,WACpBL,EAAUC,EAAQnC,GAClBkC,EAAUC,GAASzO,EAAEqM,SAASC,GAAO/J,QAAQ,QAjCxB,KAuC9B8K,MAAO,IACA1D,OAAOC,KAAK1J,KAAKC,MAAMkC,aAAaW,OAAS,GACzC9C,KAAKC,MAAM8B,OAAOe,OAAQ,EAEtB9C,KAAKC,MAAM8B,OAAO6M,OAAO,CAACC,EAAI/O,KACjC,IAAIsM,EAAQpM,KAAKC,MAAMkC,YAAYrC,EAAEoM,cAMrC,OAFIE,EAHAA,EAGQpM,KAAKC,MAAMkC,YAAYrC,EAAEoM,cAAcE,MAFvCtM,EAAEsM,MAIPyC,EAAKzC,EAAMtM,EAAEqM,UACrB,GAEA,EAGXjL,SACI,OACI,yBAAKuH,UAAU,eACX,6CAAmBzI,KAAKmN,QAAQ9K,QAAQ,IAEtC,kBAACV,EAAA,EAAD,KACE,kBAACA,EAAA,EAAMgB,OAAP,KACA,kBAAChB,EAAA,EAAMY,IAAP,KACI,kBAACZ,EAAA,EAAMiB,WAAP,eACA,kBAACjB,EAAA,EAAMiB,WAAP,eACA,kBAACjB,EAAA,EAAMiB,WAAP,iBACA,kBAACjB,EAAA,EAAMiB,WAAP,mBACA,kBAACjB,EAAA,EAAMiB,WAAP,mBAIJ,kBAACjB,EAAA,EAAMkB,KAAP,KACC7C,KAAKwB,qBASX6M,U,4FChEf,MAAMS,GAAiBC,wCAA6B,CACnD,CAAEC,KAAM,EAAGpO,MAAOqO,qBAAU,UAAW,KACvC,CAAED,KAAM,GAAKpO,MAAOqO,qBAAU,UAAW,KACzC,CAAED,KAAM,EAAGpO,MAAOqO,qBAAU,UAAW,OAGxC,MAAMC,WAAkBC,IAAMvP,UAC7BsB,SAAU,MAAD,EAC2ClB,KAAKC,MAA1C+C,EADN,EACMA,KAAM2H,EADZ,EACYA,KAAMyE,EADlB,EACkBA,MAAOC,EADzB,EACyBA,MAAO9Q,EADhC,EACgCA,OAC5B+Q,EAAO,IAAI7M,KAAKO,EAAKA,EAAKF,OAAQ,GAAGwM,MACrCC,EAAY,IAAI9M,KAAKO,EAAK,GAAGsM,MACzC,OACC,kBAAC,KAAD,CAAaD,MAAOA,EAAOD,MAAOA,EAAOlF,OAAQ,IAChDsF,OAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAI7G,IAAK,GAAI8G,OAAQ,IAChDC,WAAYrR,EACZyE,KAAMA,EAAM2H,KAAMA,EAClBkF,UAAWpI,GAAKA,EAAE6H,KAClBQ,OAAQC,uBACRC,SAAU,CAACT,EAAWD,IAEtB,kBAAC,KAAD,CAAOW,GAAI,EAAGC,SAAUzI,GAAKA,EAAE0I,OAC9B,8BACC,oCAAgBF,GAAG,aAAaG,GAAG,IAAIC,GAAG,OAAOC,GAAG,IAAIC,GAAG,MAC1D,0BAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnD,0BAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,KACpD,0BAAMF,OAAO,OAAQC,UAAU,UAAUC,YAAa,OAGxD,kBAAC,SAAD,CAAOC,OAAO,SAASC,OAAO,SAASC,MAAO,IAC9C,kBAAC,SAAD,CAAOF,OAAO,OAAOC,OAAO,SACb,kBAAC,oBAAD,CACdE,GAAG,SACHF,OAAO,SACPG,cAAeC,aAAW,cAE3B,kBAAC,oBAAD,CACCF,GAAG,OACHF,OAAO,OACPG,cAAeE,aAAO,SAEvB,kBAAC,cAAD,CACCC,UAAWzJ,GAAKA,EAAE0I,MAClBgB,KAAK,mBACLC,YAAa,EACbC,cAAeC,KACfxC,eAAgBA,MAGN,kBAAC,mBAAD,QAchBI,GAAUqC,aAAe,CACxB5G,KAAM,OAIQuE,OAFfA,GAAYsC,oBAAStC,IClFrB,MAAMuC,WAAuB7R,YAAW,eAAD,oBAanC8R,aAAa,CAACC,EAAMjP,IACbiP,EAAK7O,SAAWJ,EAAII,QACpB6O,EAAK7O,OAAQ,GAAKJ,EAAII,OAAQ,GAC1B6O,EAAK,GAAGxB,QAAUzN,EAAI,GAAGyN,MAZpCyB,sBAAsBC,GAClB,QAAGA,EAAUtT,SAAWyB,KAAKC,MAAM1B,SAC5ByB,KAAK0R,aAAaG,EAAU7O,KAAMhD,KAAKC,MAAM+C,OAgBxD9B,SACF,GAAIlB,KAAKC,MAAM+C,KAAKF,OAAS,GAA2B,KAAtB9C,KAAKC,MAAM1B,OAC5C,OAAO,8BAFG,MAIEA,EAAUyB,KAAKC,MAAf1B,OACb,OACU,yBAAKkK,UAAU,qBACf,8CAAoBlK,GAC7B,kBAACuT,GAAD,CAAY9O,KAAMhD,KAAKC,MAAM+C,KAAMzE,OAAQA,MAM/BkT,UCnCf,MAAMM,GAAYC,aAAU,YAErB,SAASC,GAAUjP,GACtB,OAAOA,EAAKhB,IAAKlC,GAAY,2BAAIA,GAAX,IAAc,KAAOiS,GAAUjS,EAAEwP,SCG3D,MAAM4C,WAAkBtS,YACpBuS,YAAYlS,EAAOmS,GACfC,MAAMpS,EAAOmS,GADW,KAyC5BE,eAAgBC,IACZ,GAAGA,EAAUxQ,OAAOe,SAAW9C,KAAKC,MAAM8B,OAAOe,OAC7C,OAAO,EACX,IAAI0P,GAAU,EAKd,OAJAxS,KAAKC,MAAM8B,OAAO0Q,QAAQ,CAAC3S,EAAEiH,KACtBwL,EAAUxQ,OAAOgF,GAAGoF,WAAarM,EAAEqM,WAClCqG,GAAQ,KAETA,GAjDiB,KAqD5BE,aAAapM,IAAU/H,IACnBgB,EAAShB,GACR+I,KAAKtJ,GACLsJ,KAAMG,IACH,IAAIzE,EAAOiP,GAAUxK,GACrBzH,KAAK6E,SAAS,CAAC8N,UAAU3P,MAE5BwE,MAAM1H,IACHE,KAAK6E,SAAS,CAAC8N,UAAU,KACzB1K,QAAQC,IAAI,qBAElB,KAhE0B,KAmE5B0K,SAAS,KACL5S,KAAK6S,gBApEmB,KAuE5BA,aAAa,KAETpU,EADcuB,KAAKyE,MAAM1C,OAAOC,IAAIlC,GAAGA,EAAEoM,eAEpC5E,KAAKtJ,GACLsJ,KAAKtH,KAAK8S,mBACVtL,MAAM,IAAIS,QAAQC,IAAI,2BA5EH,KA+E5B4K,kBAAmB9P,IACf,IAAI+B,EAAQ,GACR5C,EAAc,GAClBnC,KAAKyE,MAAM1C,OAAO0Q,QAAQ3S,IACtBiF,EAAOgO,KAAP,2BAAgBjT,GAAhB,IACI6O,UAAU3L,EAAKlD,EAAEoM,cAAcjJ,MAAM+P,cACrC5G,MAAMpJ,EAAKlD,EAAEoM,cAAcjJ,MAAMd,eAErCA,EAAYrC,EAAEoM,cAAc,CAACE,MAAMpJ,EAAKlD,EAAEoM,cAAcjJ,MAAMd,eAElEnC,KAAK6E,SAAS,CAAC9C,OAAOgD,EAAQ5C,iBAzFN,KA4F5B8Q,SAAS,CAACC,EAAK/G,EAAUC,KACrB,MAAMtN,EAAQuK,aAAayC,QAAQ,SAEnCnN,EADa,CAACuU,MAAK/G,WAAUC,QAAOC,OAAO,OAC1BrM,KAAKC,MAAMpB,OAAQC,GACnCwI,KAAKtJ,GACLsJ,KAAKtH,KAAKC,MAAMkT,YAChB7L,KAAK,IAAItH,KAAKoT,gBAAgBF,EAAK/G,EAAUC,IAC7C5E,MAAM,IAAIS,QAAQC,IAAI,8BACvBD,QAAQC,IAAI,aApGY,KAuG5BmL,UAAU,CAACH,EAAK/G,EAAUC,KACtBnE,QAAQC,IAAI,aAAcgL,EAAK/G,EAAUC,GACzC,MAAMtN,EAAQuK,aAAayC,QAAQ,SAEnCnN,EADa,CAACuU,MAAK/G,WAAUC,QAAOC,OAAO,QAC1BrM,KAAKC,MAAMpB,OAAQC,GACnCwI,KAAKtJ,GACLsJ,KAAKtH,KAAKC,MAAMkT,YAChB7L,KAAK,IAAItH,KAAKoT,gBAAgBF,EAAK/G,EAAUC,IAC7C5E,MAAM,IAAIS,QAAQC,IAAI,+BA/GC,KAmH5BkL,gBAAgB,CAACF,EAAK/G,EAAUC,KAC5BpM,KAAK2N,YAAYuF,EAAK/G,EAAUC,GAChCpM,KAAK4N,aAAasF,EAAK/G,IArHC,KAwH5BwB,YAAY,CAACpP,EAAO+U,EAAGlH,KAChBkH,EAAI,GAAKA,EAAElH,EAAQpM,KAAKC,MAAMoN,SAAqB,KAAV9O,EACxCyB,KAAK6E,SAAS,CAACuI,UAAS,EAAM7O,WAE9ByB,KAAK6E,SAAS,CAACuI,UAAS,EAAO7O,YA5HX,KAgI5BqP,aAAa,CAACrP,EAAQ+U,KAClB,IAAIvI,GAAQ,EACZ/K,KAAKyE,MAAM1C,OAAO0Q,QAAS3S,IACpBA,EAAEoM,eAAiB3N,GAAUuB,EAAEqM,UAAYmH,GAAKA,EAAG,IAClDvI,GAAQ,KAIhB/K,KAAK6E,SAAS,CAACkJ,UAAUhD,EAAOxM,YAtIhCyB,KAAKyE,MAAM,CACP1C,OAAO,GACPI,YAAY,GACZwQ,UAAU,GACV5E,WAAU,EACVX,UAAS,EACT7O,OAAO,MAGfmJ,oBACI1H,KAAK6E,SAAS,CAAC9C,OAAO/B,KAAKC,MAAM8B,QAAS/B,KAAK4S,UAC/C5S,KAAKmI,SAAWC,YAAYpI,KAAKuT,kBAAmB,KAIxDlL,uBACIC,cAActI,KAAKmI,UACnBnI,KAAK6E,SAAS,CACV9C,OAAO,GACPI,YAAY,GACZ4L,WAAU,EACVX,UAAS,IAKjBoG,mBAAmBjB,EAAWkB,GACvBzT,KAAKsS,eAAeC,IACnBvS,KAAK6E,SAAS,CAAE9C,OAAO,IAAI/B,KAAKC,MAAM8B,SAAU/B,KAAK4S,UAEtDa,EAAUlV,SAAWyB,KAAKyE,MAAMlG,SACP,KAArByB,KAAKyE,MAAMlG,QACV0J,QAAQC,IAAIlI,KAAKyE,MAAMlG,QACvByB,KAAK0S,aAAa1S,KAAKyE,MAAMlG,SAE7ByB,KAAK6E,SAAS,CAAC8N,UAAU,MAuGrCzR,SACI,OACI,yBAAKuH,UAAU,uBACX,kBAACzE,EAAA,EAAD,CAAMC,QAAS,EAAGyE,SAAO,GACrB,kBAAC1E,EAAA,EAAKE,OAAN,KACA,kBAAC/C,EAAA,EAAD,CAASwH,OAAK,GACV,kBAAC,GAAD,CACI5G,OAAQ/B,KAAKyE,MAAM1C,OACnBI,YAAanC,KAAKyE,MAAMtC,gBAKhC,kBAACuR,EAAA,EAAD,CAASC,UAAQ,GAAjB,KACA,kBAAC3P,EAAA,EAAKE,OAAN,KACA,kBAAC/C,EAAA,EAAD,CAASwH,OAAK,GACV,kBAAC,GAAD,CACI2E,UAAWtN,KAAKiT,SAChBzF,WAAYxN,KAAKqT,UACjBhG,QAASrN,KAAKC,MAAMoN,QACpBuG,SAAY,KACZxG,SAAYpN,KAAKyE,MAAM2I,SACvBO,YAAa3N,KAAK2N,YAClBI,UAAa/N,KAAKyE,MAAMsJ,UACxBH,aAAgB5N,KAAK4N,aACrBlI,WAAY1F,KAAKC,MAAMyF,cAI/B,kBAAC,GAAD,CAAgBnH,OAAQyB,KAAKyE,MAAMlG,OAAQyE,KAAMhD,KAAKyE,MAAMkO,gBAUjET,U,4BC7Jf,MAAM2B,GAAgB,CACrBC,OAAQrK,OAAOsK,OAAO,GACrBC,oBAAiBzC,aAAauC,SAGhC,MAAMG,WAAqD9E,IAAMvP,UAChEsB,SACC,MADQ,EAE0ClB,KAAKC,MAA/C0K,EAFA,EAEAA,KAAYuJ,EAFZ,EAEMlR,KAAmBoM,EAFzB,EAEyBA,MAAOC,EAFhC,EAEgCA,MAClCG,EAAS,CAAEC,KAAM,GAAIC,MAAO,GAAI7G,IAAK,GAAI8G,OAAQ,IAMjDwE,EAAmB,CAAEC,eAAgB,GAHzBhF,EAAQI,EAAOC,KAAOD,EAAOE,OAGW2E,kBAAmB,IACvEC,EAAmB,CAAEF,eAAgB,GAT5B,IAIa5E,EAAO3G,IAAM2G,EAAOG,QAKW0E,kBAAmB,IAExEE,EAAQC,iBACZvE,GAAG,GACHwE,QAAQ,CAAEC,WAAY,KACtBC,MAAM,CAAClN,EAAGmN,KAAOnN,EAAE8M,MAAQK,IAC3BC,SAASpN,GAAKA,EAAE8M,OAEZO,EAAQN,iBACZvE,GAAG,GACHwE,QAAQ,CAAEC,WAAY,KACtBC,MAAM,CAAClN,EAAGmN,KAAOnN,EAAEqN,MAAQF,IAC3BC,SAASpN,GAAKA,EAAEqN,OAEZC,EAAUC,kCACdP,QAAQ,CAAEC,WAAY,GAAIO,YAAa,IACvCN,MAAM,CAAClN,EAAGmN,KAAOnN,EAAEsN,QAAUH,IAC7BC,SAASpN,GAAKA,EAAEsN,SACZG,EAAUF,kCACdP,QAAQ,CAAEC,WAAY,GAAIO,YAAa,IACvCN,MAAM,CAAClN,EAAGmN,KAAOnN,EAAEyN,QAAUN,IAC7BC,SAASpN,GAAKA,EAAEyN,SACZC,EAAUH,kCACdP,QAAQ,CAAEC,WAAY,GAAIO,YAAa,EAAGG,YAAa,IACvDT,MAAM,CAAClN,EAAGmN,KAAOnN,EAAE0N,QAAUP,IAC7BC,SAASpN,GAAKA,EAAE0N,SAEZE,EAAiBd,EAAMO,EAAMC,EAAQG,EAAQC,EAAQjB,OArCnD,EAsCeoB,kCACrBC,kBAAkB9N,GAAKA,EAAE6H,KAMvBkG,CAAeH,GAJlBrS,EAzCO,EAyCPA,KACA8M,EA1CO,EA0CPA,OACAD,EA3CO,EA2CPA,UACA4F,EA5CO,EA4CPA,iBAKKzF,EAAW,CAFHH,EAAU6F,gBAAK1S,IACjB6M,EAAU7M,EAAK2S,KAAKC,IAAI,EAAG5S,EAAKF,OAAS,QAErD,OACC,kBAAC,KAAD,CAAaoH,OAAQ,IACpBkF,MAAOA,EACPC,MAAOA,EACPG,OAAQA,EACR7E,KAAMA,EACNiF,WAAW,OACX5M,KAAMA,EACN8M,OAAQA,EACRD,UAAWA,EACX4F,iBAAkBA,EAClBzF,SAAUA,GAEV,kBAAC,KAAD,CAAOC,GAAI,EAAG/F,OAAQ,IACrBgG,SAAUzI,GAAK,CAACA,EAAEoO,KAAMpO,EAAEqO,KAC1BC,QAAS,CAAElN,IAAK,GAAI8G,OAAQ,KAE5B,kBAAC,SAAD,eAAOgB,OAAO,QAAQC,OAAO,QAAQC,MAAO,GAAOsD,IACnD,kBAAC,SAAD,CAAOxD,OAAO,SAASC,OAAO,SAASoF,WAAW,EAAOC,cAAe,IAExE,kBAAC,oBAAD,CACCnF,GAAG,QACHF,OAAO,QACPG,cAAeE,aAAO,SAEvB,kBAAC,qBAAD,MAEA,kBAAC,cAAD,CAAYC,UAAWqD,EAAMM,WAAYf,OAAQS,EAAMT,WACvD,kBAAC,cAAD,CAAY5C,UAAW4D,EAAMD,WAAYf,OAAQgB,EAAMhB,WAEvD,kBAAC,qBAAD,CAAmB5C,UAAWqD,EAAMM,WAAY1D,KAAMoD,EAAMT,WAC5D,kBAAC,qBAAD,CAAmB5C,UAAW4D,EAAMD,WAAY1D,KAAM2D,EAAMhB,WAE5D,kBAAC,iBAAD,CAAeoC,SAAS,OAAOtF,OAAO,QAAQuF,OAAO,QACpDjF,UAAWzJ,GAAKA,EAAE0I,MAAOgB,KAAM1J,GAAKA,EAAE0I,MAAQ1I,EAAE2O,KAAO,UAAY,YAEpE,kBAAC,gBAAD,CAAczL,KAAK,WAAW0L,OAAQ,MAvBvC,IAwBC,kBAAC,gBAAD,CAAc1L,KAAK,WAAW0L,OAAQ,IAAKC,gBAAgB,QAxB5D,IAyBC,kBAAC,gBAAD,CAAc3L,KAAK,WAAW0L,OAAQ,IAAKC,gBAAgB,aAzB5D,IA2BC,kBAAC,eAAD,CAAaC,OAAQ,EAAE,IAAK,MAC5B,kBAAC,wBAAD,CACC5V,QAASb,GAAKmI,QAAQC,IAAIpI,GAC1ByW,OAAQ,EAAE,GAAI,GACd9B,QAAS,CACR,CACCvD,UAAWqD,EAAMM,WACjBlK,KAAM4J,EAAM5J,OACZmJ,OAAQS,EAAMT,SACdY,WAAYH,EAAME,UAAUC,YAE7B,CACCxD,UAAW4D,EAAMD,WACjBlK,KAAMmK,EAAMnK,OACZmJ,OAAQgB,EAAMhB,SACdY,WAAYI,EAAML,UAAUC,gBAKhC,kBAAC,KAAD,CAAOzE,GAAI,EACVC,SAAUzI,GAAKA,EAAE+O,OACjBtM,OAAQ,IAAKqM,OAAQ,CAACE,EAAGC,IAAM,CAAC,EAAGA,EAAI,MAEvC,kBAAC,SAAD,CAAO/F,OAAO,OAAOC,OAAO,OAAOC,MAAO,EAAG8F,WAAY1F,aAAO,SAEhE,kBAAC,oBAAD,CACCH,GAAG,OACHF,OAAO,OACPG,cAAeE,aAAO,SAEvB,kBAAC,aAAD,CAAWC,UAAWzJ,GAAKA,EAAE+O,OAAQrF,KAAM1J,GAAKA,EAAE0I,MAAQ1I,EAAE2O,KAAO,UAAY,aAEhF,kBAAC,KAAD,CAAOnG,GAAI,EACVC,SAAU,CAAC,EAAG,KACdhG,OAAQ,IAAKqM,OAAQ,CAACE,EAAGC,IAAM,CAAC,EAAGA,EAAI,KAAMX,QAAS,CAAElN,IAAK,GAAI8G,OAAQ,KAEzE,kBAAC,SAAD,CAAOgB,OAAO,SAASC,OAAO,SAASoF,WAAW,EAAOC,cAAe,IACxE,kBAAC,SAAD,CAAOtF,OAAO,QAAQC,OAAO,QAC5BgG,WAAY,CAAC,GAAI,GAAI,MACtB,kBAAC,oBAAD,CACC9F,GAAG,QACHF,OAAO,QACPG,cAAeE,aAAO,SAEvB,kBAAC,oBAAD,eACCC,UAAWzJ,GAAKA,EAAEyN,SACdrB,KACL,kBAAC,qBAAD,CACC0C,OAAQ,EAAE,GAAI,IACdrF,UAAWzJ,GAAKA,EAAEsN,QAClBN,QAASM,EAAQN,UACjBoC,WAAYhD,GACZiD,MAAM,cAGR,kBAAC,KAAD,CAAO7G,GAAI,EACVC,SAAU,CAAC,EAAG,KACdhG,OAAQ,IAAKqM,OAAQ,CAACE,EAAGC,IAAM,CAAC,EAAGA,EAAI,KAAMX,QAAS,CAAElN,IAAK,GAAI8G,OAAQ,KAEzE,kBAAC,SAAD,CAAOgB,OAAO,SAASC,OAAO,SAASoF,WAAW,EAAOC,cAAe,IACxE,kBAAC,SAAD,CAAOtF,OAAO,QAAQC,OAAO,QAC5BgG,WAAY,CAAC,GAAI,GAAI,MAEtB,kBAAC,oBAAD,CACC9F,GAAG,QACHF,OAAO,QACPG,cAAeE,aAAO,SAEvB,kBAAC,oBAAD,eACCC,UAAWzJ,GAAKA,EAAEsN,SACdlB,KAEL,kBAAC,qBAAD,CACC0C,OAAQ,EAAE,GAAI,IACdrF,UAAWzJ,GAAKA,EAAEyN,QAClBT,QAASS,EAAQT,UACjBoC,WAAYhD,GACZiD,MAAM,cAER,kBAAC,KAAD,CAAO7G,GAAI,EACVC,SAAU,CAAC,EAAG,KACdhG,OAAQ,IAAKqM,OAAQ,CAACE,EAAGC,IAAM,CAAC,EAAGA,EAAI,KAAMX,QAAS,CAAElN,IAAK,GAAI8G,OAAQ,KAEzE,kBAAC,SAAD,eAAOgB,OAAO,SAASC,OAAO,UAAa0D,IAC3C,kBAAC,SAAD,CAAO3D,OAAO,QAAQC,OAAO,QAC5BgG,WAAY,CAAC,GAAI,GAAI,MAEtB,kBAAC,oBAAD,CACC9F,GAAG,SACHF,OAAO,SACPG,cAAeC,aAAW,cAC3B,kBAAC,oBAAD,CACCF,GAAG,QACHF,OAAO,QACPG,cAAeE,aAAO,SACvB,kBAAC,oBAAD,eACCC,UAAWzJ,GAAKA,EAAE0N,SACdtB,KAEL,kBAAC,qBAAD,CACC0C,OAAQ,EAAE,GAAI,IACdrF,UAAWzJ,GAAKA,EAAE0N,QAClBV,QAASU,EAAQV,UACjBoC,WAAYhD,GACZiD,MAAM,cAER,kBAAC,mBAAD,QAYJ7C,GAA6C1C,aAAe,CAC3D5G,KAAM,OAKQsJ,OAFfA,GAA+CzC,oBAASyC,I,UCtPxD,MAAM8C,WAAoBnX,YAAW,eAAD,oBAEhCoX,YAAY,CAAC5P,GAAQrH,WACjBC,KAAKC,MAAMgX,YAAYlX,IAHK,KAMhCmX,eAAgB,IACL5X,EAAW0C,IAAIlC,GACX,kBAACW,EAAA,EAAD,CAAQ+B,IAAK2U,gBAAMxW,QAASX,KAAKgX,YAAajX,KAAMD,GAAIA,EAAEoF,gBAGzEhE,SAEI,OACI,6BACM,kBAACT,EAAA,EAAO0N,MAAR,KACGnO,KAAKkX,oBAOXH,UCrBf,MAAMK,WAA2BxX,YAAW,eAAD,oBACvC6E,MAAM,CACFkO,UAAW,GACXnT,MAAM,KACNjB,OAAO,QAJ4B,KAWvC0Y,YAAazX,IACTyI,QAAQC,IAAI,QAAS1I,GACrBQ,KAAK6E,SAAS,CAACrF,SAAQ,IAAIQ,KAAK0S,aAAa1S,KAAKyE,MAAMlG,OAAQiB,KAb7B,KAgBvCwF,UAAWzG,IACPyB,KAAK6E,SAAS,CAACtG,UAAS,IAAIyB,KAAK0S,aAAa1S,KAAKyE,MAAMlG,UAjBtB,KAoBvCmU,aAAcpM,IAAS,CAAC/H,EAAQiB,EAAM,QAElCD,EAAShB,EAAQiB,GAChB8H,KAAKtJ,GACLsJ,KAAMG,IACH,IAAIzE,EAAOiP,GAAUxK,GAErBzH,KAAK6E,SAAS,CAAC8N,UAAU3P,MAE5BwE,MAAM1H,IACHE,KAAK6E,SAAS,CAAC8N,UAAU,KACzB1K,QAAQC,IAAI,qBAEjB,KA1BHR,oBACI1H,KAAK0S,aAAa1S,KAAKyE,MAAMlG,QA4BjC2C,SAEI,OACI,6BACI,kBAAC,EAAD,CAAe8D,UAAWhF,KAAKgF,UAC3BU,WAAc1F,KAAKC,MAAMyF,aAE5B1F,KAAKyE,MAAMkO,UAAU7P,OAAS,EAC/B,6BACA,kBAAC,GAAD,CAAamU,YAAajX,KAAKiX,cAC/B,kBAACI,GAAD,CAAWrU,KAAMhD,KAAKyE,MAAMkO,aAE1B,OAOHyE,UCtDf,MAAME,WAAkB1X,YAAW,eAAD,oBAC9B6E,MAAQ,CACJrE,WAAY,OACZvB,OAAO,KACP0Y,UAAU,KACVvW,SAAS,KACTe,OAAO,GACPsL,QAAQ,KACR3H,WAAW,IARe,KAoB7BsH,WAAW,KACRhN,KAAK6E,SAAS,CACVzE,WAAY,OACZvB,OAAO,KACP0Y,UAAU,KACVvW,SAAS,KACTe,OAAO,GACPsL,QAAQ,QA3Bc,KA+B7BmK,cAAc,KpB2ERhZ,MADK,mDoBxEH8I,KAAKtJ,GACLsJ,KAAKtE,GAAOhD,KAAK6E,SAAS,CAACa,WAAY1C,EAAKhB,IAAIhC,KAAKyX,iBACrDjQ,MAAM,IAAKS,QAAQC,IAAI,4BAnCF,KAsC7BuP,aAAczU,IACH,CACHqB,MAAMrB,EAAKzE,OACXwB,KAAKiD,EAAKjD,OAzCW,KA6C7BoT,WAAYnQ,IACR,MAAM0U,EAAS,CAACzH,GAAGjQ,KAAKyE,MAAM5F,OAAQkK,MAAM/I,KAAKyE,MAAM8S,WACvDvX,KAAK2X,gBAAgB3U,EAAM0U,IA/CF,KAoD7BE,WAAW,KACR,IAAI9Y,EAAQuK,aAAayC,QAAQ,SAC9BhN,EACCkB,KAAK6X,WAAW/Y,GAEhBkB,KAAKgN,cAzDiB,KA6D7B2K,gBAAgB,CAAC3U,EAAM0U,KACpB1X,KAAK6E,SAAS,CACVhG,OAAO6Y,EAASzH,GAChBsH,UAAUG,EAAS3O,MACnB/H,SAASgC,EAAKmG,KAAK2O,OAAO,GAAG5S,cAAgBlC,EAAKmG,KAAKvD,MAAM,GAC7D7D,OAAOiB,EAAKjB,OACZsL,QAAQrK,EAAKqK,SAEf,IAAKpF,QAAQC,QArEW,KAwE7B2P,WAAY/Y,IACR,IAAI4Y,EAAWtY,KAAK2Y,MAAMC,KAAKlZ,EAAMmZ,MAAM,KAAK,MpBzClD,SAAuBnZ,EAAOD,GAUjC,OAAOL,MATKT,EAAW,SAASc,EACrB,CACHI,OAAQ,MACRC,QAAS,CACL,cAAiBJ,EACjB,eAAgB,mBAChB,YAAa,uBoBoCpBoZ,CAAcpZ,EAAO4Y,EAASzH,IAC1B3I,KAAKtJ,GACLsJ,KAAMG,GAAKzH,KAAK2X,gBAAgBlQ,EAAGiQ,IACnClQ,MAAMC,GAAGQ,QAAQC,IAAI,uCACzBD,QAAQC,OA/EiB,KAkF9BiQ,eAAe,KACXnY,KAAK6E,SAAS,CAACzE,WAAW,QAAS,IAAIJ,KAAK4X,eAnFlB,KAsF9B3W,aAAa,KACToI,aAAa+O,WAAW,SACxBpY,KAAK4X,cAxFqB,KA2F9B1X,WAAYH,GAASC,KAAK6E,SAAS,CAAEzE,WAAYL,IA3FnB,KA8F9BsY,eAAe,KAEX,OAAQrY,KAAKyE,MAAMrE,YACf,IAAK,OACD,OAAO,kBAAE,EAAF,CACHvB,OAAQmB,KAAKyE,MAAM5F,OACnBmC,SAAUhB,KAAKyE,MAAMzD,SACrB0E,WAAY1F,KAAKyE,MAAMiB,aAG/B,IAAK,YACD,OAAI1F,KAAKyE,MAAM5F,OACR,kBAAE,GAAF,CACKwO,QAASrN,KAAKyE,MAAM4I,QACpBxO,OAAQmB,KAAKyE,MAAM5F,OACnBkD,OAAQ/B,KAAKyE,MAAM1C,OACnB2D,WAAY1F,KAAKyE,MAAMiB,WACvByN,WAAYnT,KAAKmT,aANC,kBAAE,EAAF,MAOlC,IAAK,SACD,OAAInT,KAAKyE,MAAM5F,OACR,kBAAC,GAAD,CACH6G,WAAY1F,KAAKyE,MAAMiB,aAFG,kBAAE,EAAF,MAIlC,IAAK,SACD,OAAI1F,KAAKyE,MAAM5F,OAER,kBAAE,EAAF,CAASA,OAAQmB,KAAKyE,MAAM5F,SAFL,kBAAE,EAAF,MAKlC,IAAK,QACD,OAAO,kBAAE,EAAF,CAAQ0K,WAAYvJ,KAAKmY,iBAEpC,IAAK,SACD,OAAO,kBAAE,EAAF,CAAS5O,WAAYvJ,KAAKmY,iBAErC,QACI,OAAO,kBAAE,EAAF,QAvHlBzQ,oBACG1H,KAAK4X,aACL5X,KAAKwX,gBAGRnP,uBACGrI,KAAKgN,aAuHT9L,SAEI,OACI,6BACI,kBAAC,EAAD,CACIhB,WAAYF,KAAKE,WACjBE,WAAYJ,KAAKyE,MAAMrE,WACvBY,SAAUhB,KAAKyE,MAAMzD,SACrBC,aAAcjB,KAAKiB,eAItBjB,KAAKqY,mBAMPf,UC/Jf,MAAMgB,WAAY1Y,YAChBsB,SACE,MAAMgJ,EAASqO,OAAOC,YACtB,OACE,yBAAK/P,UAAU,MAAM5H,MAAO,CAACqJ,WAE3B,kBAAC,GAAD,QAMOoO,UCLKG,QACW,cAA7BF,OAAOG,SAASC,UAEe,UAA7BJ,OAAOG,SAASC,UAEhBJ,OAAOG,SAASC,SAASC,MACvB,2DCXNC,IAAS3X,OAAO,kBAAC,GAAD,MAAS4X,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5R,KAAK6R,IACjCA,EAAaC,iB","file":"static/js/main.80a4b5d6.chunk.js","sourcesContent":["// const backendUrl=\"http://localhost:4000/\"\nconst backendUrl=\"https://trade-simulator-backend.herokuapp.com/\"\n\n//batch quotes\n//http://localhost:4000/api/batch/intc,fb\n//batch prices\n\nexport function handleErrors(response) {\n    // console.log(response)\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response.json();\n}\n\n\nexport function postUser(user){\n    const url = backendUrl+\"users\";\n    let config={\n        method: 'POST', \n        headers: {\n            'Content-Type': 'application/JSON',\n            'Data-Type': 'application/JSON'\n        },\n        body: JSON.stringify(user)\n    };\n    return fetch(url,config).then(r => r.json())\n}\n\nexport function postSessions(user){\n    const url = backendUrl+\"sessions\";\n    let config={\n        method: 'POST', \n        headers: {\n            'Content-Type': 'application/JSON',\n            'Data-Type': 'application/JSON'\n        },\n        body: JSON.stringify(user)\n    };\n    return fetch(url,config)\n}\n\nexport function fetchUserInfo(token, userID){\n    const url = backendUrl+\"users/\"+userID\n    let config={\n            method: 'GET', \n            headers: {\n                'Authorization': token,\n                'Content-Type': 'application/JSON',\n                'Data-Type': 'application/JSON'\n            },\n        };\n    return fetch(url, config)\n}\n\nexport function fetchUserHistory(token, userID, page){\n    const url = backendUrl+\"trades/\"+userID +\"?page=\" +page\n    let config={\n            method: 'GET', \n            headers: {\n                'Authorization': token,\n                'Content-Type': 'application/JSON',\n                'Data-Type': 'application/JSON',\n            },\n        };\n    return fetch(url, config)\n}\n\nexport function fetchStockPrice(symbols){\n    const url = backendUrl+\"api/price/\"+symbols\n        \n    return fetch(url)\n}\n\nexport function fetchStockQuote(symbol){\n    const url = backendUrl+\"api/stock/\"+symbol       \n    return fetch(url)\n}\n\nexport function fetchBatchQuote(symbols){\n    const url = backendUrl+\"api/batch/\"+symbols      \n    return fetch(url)\n}\n\nexport function sendTrade(trade, userID, token){\n    const url = backendUrl+\"trades/\"+userID\n    let config={\n            method: 'POST', \n            headers: {\n                'Authorization': token,\n                'Content-Type': 'application/JSON',\n                'Data-Type': 'application/JSON'\n            },\n            body: JSON.stringify({trade})\n        };\n\n    return fetch(url, config)\n}\n    \n// const url= `https://cloud.iexapis.com/stable/stock/${symbol}/chart/${range}?token=`;\nexport const chartRange = [\"1m\",\"3m\", \"6m\",\"ytd\",\"1y\",\"2y\"];\nexport function getChart(symbol, range=\"6m\"){\n    if(chartRange.indexOf(range.toLowerCase()) === -1) range = \"6m\"\n    const url = backendUrl+`api/chart/${symbol}/${range}`\n    return fetch(url);\n}\n\n\nexport function getFocus(){\n    // const url ='https://cloud.iexapis.com/stable/stock/market/list/mostactive?token=';\n    const url = backendUrl + 'api/active'\n    return fetch(url);\n}   \n\nexport function getSymbols(){\n    const url = 'https://api.iextrading.com/1.0/ref-data/symbols'\n    return fetch(url);\n}","import React, { Component } from 'react';\nimport { Menu, Segment, Button } from 'semantic-ui-react'\n\nclass Navbar extends Component {\n    \n\n    handleItemClick = (e, { name }) => this.props.handleMenu(name)\n\n    displayButtons=()=>{\n        const { activeItem } = this.props;\n        let login =  <Menu.Item position='right'>\n                <Button  \n            name='signup' \n            active={activeItem === 'signup'}\n            onClick={this.handleItemClick}\n            color='green'>\n            Signup\n            </Button>\n            <Button  \n                name='login' \n                active={activeItem === 'login'}\n                onClick={this.handleItemClick}\n                style={{ marginLeft: '0.5em' }} \n                color='green'>\n                Login\n            </Button>\n        </Menu.Item>\n\n        let logout= <Menu.Item position='right'>\n            Welcome, {this.props.userName}\n            <Button  \n                name='logout' \n                onClick={this.props.handleLogout}\n                style={{ marginLeft: '2em' }} \n                color='green'>\n                Logout\n            </Button>\n        \n        </Menu.Item>\n\n\n        if(this.props.userName){\n            return logout\n        }else{\n            return login\n        }\n    }\n\n\n    render() {\n        const { activeItem } = this.props\n        return (\n            <div>\n            <Segment inverted>\n                <Menu inverted pointing secondary>\n                <Menu.Item name='home' active={activeItem === 'home'} onClick={this.handleItemClick} />\n                <Menu.Item\n                    name='portfolio'\n                    active={activeItem === 'portfolio'}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name='charts'\n                    active={activeItem === 'charts'}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name='trades'\n                    active={activeItem === 'trades'}\n                    onClick={this.handleItemClick}\n                />\n                {/* <Menu.Item\n                    position='right'\n                    name='signup'\n                    active={activeItem === 'signup'}\n                    onClick={this.handleItemClick}\n                /> */}\n\n                {this.displayButtons()}\n                </Menu>\n\n            </Segment>\n\n        \n        </div>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react'\n\n\nclass FocusList extends Component {\n    generateTables=()=>{\n        const colorCell = (color, value)=>{\n            if(color ===\"negative\") return <Table.Cell negative>{value}</Table.Cell>\n            if(color ===\"positive\") return <Table.Cell positive>{value}</Table.Cell>\n            return <Table.Cell >{value}</Table.Cell>\n        }\n\n\n       return  this.props.stocks.map(e=>{\n            // console.log(e)\n            const {symbol, change, changePercent, latestPrice} = e;\n            let percent = (changePercent*100).toFixed(2).toString()+\"%\"\n            let color = change<0 ? \"negative\":\"positive\";\n            if(change === 0) color=\"none\";\n            return <Table.Row key={Date.now()+symbol}>\n            {colorCell(color, symbol)}\n            {colorCell(color, change)}\n            {colorCell(color, percent)}\n            {colorCell(color, latestPrice)}\n        </Table.Row>\n        })\n\n    }\n    render() {\n        return (\n            <div>\n                <h3>Trending Stocks</h3>\n                <Table >\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Symbol</Table.HeaderCell>\n                        <Table.HeaderCell>Changed($)</Table.HeaderCell>\n                        <Table.HeaderCell>Percent</Table.HeaderCell>\n                        <Table.HeaderCell>Price($)</Table.HeaderCell>\n                    </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                    {this.props.stocks.length > 0? this.generateTables():null}\n                    </Table.Body>\n                </Table>\n                \n            </div>\n        );\n    }\n}\n\nexport default FocusList;","import React, { Component } from 'react';\nimport { Card, Icon } from 'semantic-ui-react'\n\nclass StockCard extends Component {\n    render() {\n        if(this.props.data){\n            const {companyName, latestPrice, symbol, change, avgTotalVolume,week52High,week52Low} = this.props.data.quote;\n            let arrow = change <0? \"arrow down\": \"arrow up\";\n            let color = change <0? \"red\": \"green\";\n            if(change === 0) {\n                color=\"black\";\n                arrow = \"\";\n            }\n            const fontColor = {color}\n            return (\n                <Card color={color} fluid>\n                <Card.Content>\n                <Card.Header style={fontColor}>\n                \n                ${latestPrice}-{symbol}-${change}\n                    <Icon name={arrow} />\n                </Card.Header>\n                <Card.Meta>\n                    <span >52-Week High:{week52High} Low:{week52Low}</span>\n                </Card.Meta>\n                <Card.Description>{companyName}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    Volumn: {avgTotalVolume}\n                </Card.Content>\n            </Card>\n            );\n        }else{\n            return (\n                <div></div>\n            )\n        }\n    }\n}\n\nexport default StockCard;\n","import React, { Component } from 'react';\nimport Card from './Card';\nimport { Grid } from 'semantic-ui-react'\n\nclass CardContainer extends Component {\n    \n    render() {\n\n        return (\n            <div>\n                <h3>Major ETFs</h3>\n                <Grid columns={2}>\n                    <Grid.Row>\n                    <Grid.Column >\n                    <Card data ={this.props.etfs[\"IWM\"]} />\n                    </Grid.Column>\n\n                    <Grid.Column>\n                    <Card data ={this.props.etfs[\"DIA\"]}/>\n                    </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                    <Grid.Column>\n                    <Card data={this.props.etfs[\"SPY\"]}/>\n                    </Grid.Column>\n                    <Grid.Column>\n                    <Card data={this.props.etfs[\"QQQ\"]}/>\n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n\n                \n                \n            </div>\n        );\n    }\n}\n\nexport default CardContainer;","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Search, Label } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\n\n\nconst resultRenderer = ({ title, name }) => <Label content={`${title+\":\"+name}`} />\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default class SearchExampleStandard extends Component {\n    state={\n        isLoading: false, \n        results: [], \n        value: '' \n    }\n\n  componentWillMount() {\n    this.resetComponent()\n  }\n\n  resetComponent = () => this.setState({ isLoading: false, results: [], value: '' })\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: result.title })\n    this.props.setSymbol(result.title)\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value:value.toUpperCase() })\n    this.props.setSymbol(value);\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.resetComponent()\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = result => re.test(result.title)\n      const isMatchName = result => re.test(result.name)\n      const exactMatch = result => result.title === this.state.value\n      \n      const output = _.filter(this.props.searchData, isMatch).slice(0,8)\n      const outputName = _.filter(this.props.searchData, isMatchName).slice(0,8)\n      const excactOutput = _.filter(this.props.searchData, exactMatch)\n\n      const blurOuput = arrayUnique([...output, ...outputName]).slice(0,8);\n\n      this.setState({\n        isLoading: false,\n        results: arrayUnique([...excactOutput, ...blurOuput])\n      })\n    }, 300)\n  }\n\n\n\n  render() {\n    const { isLoading, value, results } = this.state\n    return (\n          <Search fluid\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, { leading: true })}\n            results={results}\n            value={value}\n            resultRenderer={resultRenderer}\n            placeholder =\"Search Stock Symbol\"\n            input={{ icon: 'search', iconPosition: 'left' }}\n          />\n    )\n  }\n}\n\n\nfunction arrayUnique(array) {\n  var a = array.concat();\n  for(var i=0; i<a.length; ++i) {\n      for(var j=i+1; j<a.length; ++j) {\n          if(a[i] === a[j])\n              a.splice(j--, 1);\n      }\n  }\n\n  return a;\n}","import React, { Component } from 'react';\nimport { Card, Icon} from 'semantic-ui-react'\nimport debounce from 'lodash/debounce';\nimport { fetchStockQuote, handleErrors } from '../Adapter';\nimport AutoSearch from './AutoSearch';\n\n\n\nclass SearchForm extends Component {\n    state={\n        symbol:\"GOOG\",\n        quote:null\n    }\n\n    componentDidMount(){\n        this.getStockPrice();\n    }\n\n    handleChange=(event, {value})=>{\n        this.setState({symbol:value.toUpperCase()}, this.getStockPrice);\n    }\n\n    getStockPrice = debounce(()=>{\n        fetchStockQuote(this.state.symbol)\n            .then(handleErrors)\n            .then(data => {\n                if(data.head!== 404){\n                    this.setState({quote:data})\n                }else{\n                    this.setState({quote:\"Not Found\"})\n                }\n            }).catch((d)=>this.setState({quote:\"Not Found\"}))\n            \n    }, 300)\n\n    setSymbol=(symbol)=>{\n        this.setState({symbol},this.getStockPrice)\n    }\n\n\n    render() {\n        if(this.state.quote!==null && this.state.quote !==\"Not Found\"){\n             var {week52High, week52Low, companyName, latestPrice, change, latestTime} = this.state.quote;\n        }\n        let arrow = change <0? \"arrow down\": \"arrow up\";\n        let color = change <0? \"red\": \"green\";\n        if(change === 0) {\n            color=\"black\";\n            arrow = \"\";\n        }\n\n        const fontColor = {color}             \n\n        return (\n            <Card fluid color={color} >\n            <Card.Content>\n            <Card.Header style={fontColor}>\n            <AutoSearch \n                searchData={this.props.searchData}\n                setSymbol={this.setSymbol}\n                />\n                Price: ${latestPrice} Change: ${change} <Icon name={arrow}/>\n            </Card.Header>\n            <Card.Meta>\n                    <span > 52-week High:{week52High} Low:{week52Low}</span>\n                </Card.Meta>\n                <Card.Description>Company: {companyName},  {latestTime}</Card.Description>\n            </Card.Content>\n            </Card>\n        );\n        \n    }\n}\n\nexport default SearchForm;","import React, { Component } from 'react';\nimport { getFocus, handleErrors, fetchBatchQuote } from '../Adapter';\nimport { Grid, Segment } from 'semantic-ui-react'\nimport FocusList from './FocusList';\nimport CardContainer from './CardContainer';\nimport SearchForm from './SearchForm';\n\nclass Home extends Component {\n    state={\n        focus:[],\n        etfs:[],\n        serverUP:false,\n    }\n\n    componentDidMount(){\n        this.getInfo();\n        this.interval= setInterval(this.getInfo , 5000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.interval)\n    }\n\n\n    getInfo=()=>{\n        getFocus().then(handleErrors).then(data => this.setState({focus:data})).catch( err => console.log(\"Error:\", err))\n        fetchBatchQuote([\"DIA\", \"SPY\", \"IWM\", \"QQQ\"])\n            .then(handleErrors)\n            .then(data => this.setState({etfs:data, serverUP:true}))\n            .catch(d=>console.log(\"Fetch ETFs ERROR!\"))\n    }\n\n    render() {\n        const userName = this.props.userID ? this.props.userName : \"guest\";\n        const message =this.props.userID \n            ? \"Today's snapshot:\" \n            : \"Please sign up or login for full functionalities.\";\n        const herokuMessage = this.state.serverUP ? null : \"Please allow 10s for heroku backend to boot.\";\n        return (\n            <div className=\"home-container\">\n                <h1>\n                    Welcome, {userName}! \n                </h1>\n                <h3>\n                    {message}\n                    {herokuMessage}\n                </h3>\n\n                <Grid columns={2} relaxed>\n                    <Grid.Column>\n                    <Segment basic>\n                    <FocusList stocks={this.state.focus}/>\n                    </Segment>\n                    </Grid.Column>\n\n                    <Grid.Column >\n                        <h2>Find Stock:</h2>\n                        <SearchForm searchData={this.props.searchData} sytle={{top:\"7px\"}}/>\n\n                        <CardContainer etfs={this.state.etfs}/>\n                    </Grid.Column>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react';\nimport { postSessions } from '../Adapter';\n\nclass Login extends Component {\n    state={\n        email:\"\",\n        password:\"\",\n        message:null\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            email:'',\n            password:'',\n            message:null\n        })\n    }\n\n\n    handleSumbit=(event)=>{\n        event.preventDefault();\n        console.log(this.state);\n        const {email, password} = this.state;\n        let user ={\n            email,\n            password\n        }\n        postSessions(user).then(this.handleErrors).then( d => {\n            console.log(d)\n            if(d.token){\n                localStorage.setItem('token', d.token)\n                this.props.backToHome()\n            }else{\n                alert(Object.keys(d)+\" \"+ d[Object.keys(d)]);\n            }\n          }).catch((error)=> {\n            this.setState({message:\"Email/Password incorrect!\"})\n            })\n    }\n\n\n    handleGuestLogin=(event)=>{\n        event.preventDefault();\n        this.setState({email:\"guest@guest.com\", password:\"guest\"}, ()=>this.handleSumbit(event))        \n    }\n\n    handleErrors(response) {\n        console.log(response)\n        if (!response.ok) {\n            throw Error(response.statusText);\n        }\n        return response.json();\n    }\n\n    handleInput = (event, { value, name })=>{\n        // console.log(event.target, value, name)\n        let message = null;\n        this.setState({[name]:value, message})\n    }\n\n    displayMessage=()=>{\n        let message1 = <Message color=\"red\">\n            {this.state.message}\n            </Message>        \n        return this.state.message? message1: null;                 \n    }\n\n    render() {\n        const {email, password} = this.state;\n        return (\n            <div className='login-form'>\n\n            <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle' >\n              <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' color='black' textAlign='center'>\n                   Please Login\n                </Header>\n                <Form size='large'>\n                  <Segment stacked>\n                    <Form.Input fluid icon='user'\n                    value={email} \n                    onChange={this.handleInput}\n                    iconPosition='left' \n                    placeholder='E-mail address' \n                    name=\"email\"/>\n                    <Form.Input\n                      fluid\n                      icon='lock'\n                      iconPosition='left'\n                      placeholder='Password'\n                      type='password'\n                      onChange={this.handleInput}\n                      name=\"password\"\n                      value={password}\n\n                    />\n        \n                    <Button color='green' fluid size='large' onClick={this.handleSumbit}>\n                      Login\n                    </Button>\n                    <br></br>\n                    <Button color='blue' fluid size='large' onClick={this.handleGuestLogin}>\n                    Guest Demo Login\n                    </Button>\n                  </Segment>\n                </Form>\n                {this.displayMessage()}\n              </Grid.Column>\n            </Grid>\n          </div>\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react';\nimport { postUser } from '../Adapter';\n\nclass Signup extends Component {\n    state={\n        email:'',\n        username:'',\n        password:'',\n        passwordReenter:'',\n        message:null,\n        valid:false,\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            email:'',\n            username:'',\n            password:'',\n            passwordReenter:'',\n            message:\"\",\n            valid:false,\n        })\n    }\n\n    handleSumbit=(event)=>{\n        event.preventDefault();\n        console.log(this.state);\n        const {email , username, password} = this.state;\n        let user ={\n            email,\n            username,\n            password\n        }\n        postUser(user).then(this.handleErrors).then( d => {\n            console.log(d)\n            if(d.token){\n                localStorage.setItem('token', d.token)\n                // this.props.history.push('/')\n                this.props.backToHome()\n            }else{\n                alert(Object.keys(d)+\" \"+ d[Object.keys(d)]);\n            }\n          }).catch((error)=> {\n            this.setState({message:\"Email has been taken!\"})\n            })\n    }\n\n    handleErrors(response) {\n        console.log(response)\n        if (!response.ok) {\n            throw Error(response.statusText);\n        }\n        return response;\n    }\n\n    handleInput = (event, { value, name })=>{\n        // console.log(event.target, value, name)\n        let message = null;\n        // console.log(this.checkEmail())\n        if(this.checkEmail()){\n            message = \"Email can not be blank!\"\n        }else if(this.state.password ===\"\"){\n            message = \"Password can not be blank!\"            \n        }else if(this.checkPassword()){            \n            message = \"Your password doesn't match!\"\n        }\n        // console.log(message)\n        this.setState({[name]:value, message}, this.validate)\n    }\n\n    validate=()=>{\n        if(this.state.email!==\"\" \n            && this.state.password!==\"\" \n            && this.state.password === this.state.passwordReenter)\n            this.setState({valid:true, message:\"\"})\n        else\n            this.setState({valid:false})\n    }\n\n    displayMessage=()=>{\n        let message1 = <Message color=\"red\">\n            {this.state.message}\n            </Message>        \n        return this.state.message? message1: null;                 \n    }\n\n    checkPassword=()=>{       \n        return this.state.password!==this.state.passwordReenter;                 \n    \n    }\n\n    checkEmail=()=>{\n        return this.state.email === \"\";     \n    }\n\n    signupButton=()=>{\n        if(this.state.valid)\n            return <Button color='green' fluid size='large' onClick={this.handleSumbit}>Sign Up</Button>\n        else\n        return <Button disabled color='green' fluid size='large' onClick={this.handleSumbit}>Sign Up</Button>\n\n    }\n\n    \n    render() {\n        const {email , username, password, passwordReenter} = this.state;\n        return (\n            <div className='signup-form'>\n\n            <Grid textAlign='center' style={{ height: '100%'}} verticalAlign='middle' >\n              <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' color='black' textAlign='center'>\n                   Please Register\n                </Header>\n                <Form size='large'>\n                  <Segment stacked>\n                    <Form.Input fluid icon='user' \n                        name=\"email\"\n                        iconPosition='left' \n                        placeholder='E-mail address'\n                        onChange={this.handleInput} \n                        value={email}/>\n                    <Form.Input fluid icon='user' \n                        name=\"username\"\n                        iconPosition='left' \n                        placeholder='Name' \n                        onChange={this.handleInput} \n                        value={username}/>\n                    <Form.Input\n                      fluid\n                      name=\"password\"\n                      icon='lock'\n                      iconPosition='left'\n                      placeholder='Password'\n                      onChange={this.handleInput} \n                      type='password'\n                      value={password}\n                    />\n\n                    <Form.Input\n                      fluid\n                      name=\"passwordReenter\"\n                      icon='lock'\n                      iconPosition='left'\n                      placeholder='Reenter Your Password'\n                      onChange={this.handleInput} \n                      type='password'\n                      value={passwordReenter}\n                    />\n        \n                    {this.signupButton()}\n                  </Segment>\n                </Form>\n                {this.displayMessage()}\n    \n\n              </Grid.Column>\n            </Grid>\n          </div>\n        );\n    }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { Table, Pagination } from 'semantic-ui-react';\nimport { fetchUserHistory} from '../Adapter';\n\n\nclass Trades extends Component {\n    state={\n        trades:[],\n        meta:{},\n        activePage:1,\n    }\n\n    componentDidMount(){\n        this.getTrades();\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            trades:[],\n            meta:{},\n            activePage:1,\n        })\n    }\n\n    handleErrors = (response)=>{\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response.json();\n    }\n\n    getTrades=(page=1)=>{\n        const token = localStorage.getItem('token');\n\n        fetchUserHistory(token, this.props.userID, page)\n            .then(this.handleErrors)\n            .then(this.storeData)\n            .catch(()=> console.log(\"ERROR\"))\n    }\n\n    storeData=(data)=>{\n        this.setState({trades:data.trades, meta:data.meta, activePage:data.meta.current_page })\n    }\n\n    generateTables=()=>{\n        return this.state.trades.map(e=>{\n            let {created_at, stock_symbol, quantity, price, action} = e;\n\n            let estTime = new Date(created_at);\n            return <Table.Row key ={Date.now()+stock_symbol+quantity+created_at}>\n        <Table.Cell>{estTime.toDateString()}</Table.Cell>\n        <Table.Cell>{stock_symbol}</Table.Cell>\n        <Table.Cell>{quantity}</Table.Cell>\n        <Table.Cell>{price}</Table.Cell>\n        <Table.Cell>{action}</Table.Cell>\n        </Table.Row>\n        })\n    }\n\n    handlePageSelect=(event, {activePage})=>{\n        this.getTrades(activePage);\n    }\n\n    topPages =(key)=>{\n        if(this.state.meta.total_pages && this.state.meta.total_pages > 1)\n            return <Pagination key={key} \n                    onPageChange={this.handlePageSelect}\n                    defaultActivePage={this.state.meta.current_page} \n                    totalPages={this.state.meta.total_pages} />\n\n        return null;\n    }\n    \n    render() {\n        return (\n            <div className=\"trades-table\">\n                <h2>\n                Trade History\n                </h2>\n                {this.topPages(\"top_pagination\")}\n                <Table >\n                    <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>Symbol</Table.HeaderCell>\n                        <Table.HeaderCell>Shares</Table.HeaderCell>\n                        <Table.HeaderCell>Price($)</Table.HeaderCell>\n                        <Table.HeaderCell>Buy/Sell</Table.HeaderCell>\n                    </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {this.state.trades.length>0 ? this.generateTables():null}\n                    </Table.Body>\n                    </Table>\n                    {this.topPages(\"down_pagination\")}\n\n                    {/* {this.state.meta.totalPages === 1?null :this.bottomPages(\"999bottom_pagination\")} */}\n            </div>\n        );\n    }\n}\n\nexport default Trades;\n","import React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Message } from 'semantic-ui-react';\nimport { fetchStockQuote, handleErrors } from '../Adapter';\nimport debounce from 'lodash/debounce';\nimport AutoSearch from './AutoSearch';\n\nclass BuySellForm extends Component {\n    state={\n        symbol:\"\",\n        quantity:0,\n        message:null,\n        price:null,\n        valid:false,\n    }\n\n    componentDidMount(){\n        this.interval = setInterval(this.getPeriodicUpdate, 5000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.interval);\n        this.clearState();\n    }\n\n\n    clearState=()=>{\n        this.setState({\n            symbol:\"\",\n            quantity:0,\n            message:null,\n            price:null,\n            valid:false,\n        })\n    }\n\n    getPeriodicUpdate=()=>{\n        if(this.state.valid && this.state.symbol!==\"\"){\n\n            this.getStockPrice()\n        }\n    }\n\n    getStockPrice=debounce(()=>{\n        // console.log(\"get price!\");\n        fetchStockQuote(this.state.symbol)\n            .then(handleErrors)\n            .then(data => {\n                if(data.head!== 404){\n                    let message = \"Company: \"+data.companyName +\" || Current Price: $\" + data.latestPrice\n                    // console.log(data)\n                    this.setState({message, price:data.latestPrice, valid:true})\n                }else{\n                    this.setState({valid:false,message:null})\n                }\n            }).catch((d)=>this.setState({valid:false, message:null}))\n            \n    }, 300)\n\n\n    handleBuySumbit=()=>{\n        let total = this.state.price*this.state.quantity;\n        if(this.props.validBuy && total < this.props.balance && this.state.valid){\n            this.props.handleBuy(this.state.symbol, this.state.quantity, this.state.price);\n        }\n    }\n\n    handleSellSubmit=()=>{\n        this.props.handleSell(this.state.symbol, this.state.quantity, this.state.price);\n    }\n    \n    handleSearchInput=(value)=>{\n        if(value !== \"\")this.getStockPrice();\n        value=value.toUpperCase();\n        this.setState({symbol:value}, this.validate);\n    }\n\n    handleInput = (event, { value, name })=>{\n        // console.log(event.target.value, value, name)\n        switch (name) {\n            case \"symbol\":\n                if(value !== \"\")this.getStockPrice();\n                value=value.toUpperCase();\n                break;\n            case \"quantity\":\n                let regex = /[0-9]|\\./;\n                if(regex.test(value))\n                    value= parseInt(value);\n                else\n                    value= \"\";\n                break;\n\n            default:\n                break;\n        }\n        this.setState({[name]:value}, this.validate);\n    }\n\n    validate=()=>{\n        this.props.validateBuy(this.state.symbol, this.state.quantity, this.state.price);\n        this.props.validateSell(this.state.symbol, this.state.quantity);\n    }\n\n\n    buyButton=()=>{\n        if(this.state.valid && this.props.validBuy)\n            return <Button positive onClick={this.handleBuySumbit}>Buy</Button>\n        return <Button positive disabled >Buy</Button>\n    }\n    sellButton=()=>{\n        // console.log(\"sell button\", this.props.validSell)\n        if(this.props.validSell){\n            return <Button negative onClick={this.handleSellSubmit}>Sell</Button>\n        }\n        return <Button negative disabled >Sell</Button>\n    }\n\n    displayMessage = () =>{\n        let message1 = <Message color=\"red\">\n            Invalid Stock Symbol\n            </Message>        \n        return !this.state.valid&&this.state.symbol!==\"\"? message1: null;    \n    }\n\n\n    displayQuote=()=>{\n        let message1 = <Message color=\"green\">\n            {this.state.message}\n        </Message>        \n    return this.state.valid? message1: null; \n    }\n\n    displayTotal=()=>{\n        let total = this.state.price*this.state.quantity;\n        let color = total > this.props.balance ? \"red\" : \"green\"\n        let reminder = color ===\"red\" ? \" Over your budget!\" : null;\n        let message1 = <Message color={color}>\n            Total Cost : ${total.toFixed(2)} {reminder}\n        </Message>        \n        return this.state.valid? message1: null; \n    }\n\n    render() {\n        const {quantity} = this.state;\n        const balance = this.props.balance ? this.props.balance.toFixed(2) : 0;\n        return (\n            <div className=\"buy-sell-form\">\n                 <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle' >\n              <Grid.Column style={{ maxWidth: 530, height:380 }}>\n                <Header as='h2' color='black' textAlign='center'>\n                   Current Cash: ${balance}\n                </Header>\n                <Form size='large'>\n                \n\n                    <AutoSearch fluid\n                        searchData={this.props.searchData}\n                        setSymbol={this.handleSearchInput}\n                    \n                    />\n                    Number of Shares:<Form.Input\n                      fluid\n                      icon='circle'\n                      iconPosition='left'\n                      placeholder='Number of shares'\n                      onChange={this.handleInput}\n                      name=\"quantity\"\n                      type=\"integer\"\n                      value={quantity}\n\n                    />\n\n                      <Button.Group fluid>\n                        {this.buyButton()}\n                        <Button.Or />\n                        {this.sellButton()}\n                    </Button.Group>\n                    \n                  \n                </Form>\n                {this.displayMessage()}\n                {this.displayQuote()}\n                {this.displayTotal()}\n              </Grid.Column>\n            </Grid>\n                \n            </div>\n        );\n    }\n}\n\nexport default BuySellForm;","import React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react'\n\nclass StockList extends Component {\n\n    generateTables=()=>{\n        const cellColor = (status, value) => {\n            switch (status) {\n                case \"positive\":\n                    return <Table.Cell positive>{value}</Table.Cell>\n                    \n                case \"negative\":\n                    return <Table.Cell negative>{value}</Table.Cell>\n        \n                default:\n                    return <Table.Cell>{value}</Table.Cell>       \n            }\n        }\n        const alphabeticOrder = (a,b) => a.stock_symbol.localeCompare(b.stock_symbol);\n\n       return this.props.stocks.sort(alphabeticOrder).map( e => {\n            let price \n            if(!price){\n                price = e.price;\n            }else{\n                price = this.props.latestPrice[e.stock_symbol].latestPrice\n            }\n            let status = \"\";\n            if(price > e.openPrice) status=\"positive\";\n            else if(price < e.openPrice) status=\"negative\";\n\n        return <Table.Row key={Date.now()+e.stock_symbol}>\n            {cellColor(status, e.stock_symbol)}\n            {cellColor(status, e.quantity)}\n            {cellColor(status, e.openPrice)}\n            {cellColor(status, price)}\n            {cellColor(status, (e.quantity*price).toFixed(2))}\n        </Table.Row>\n\n       })\n    }\n\n    total =() =>{\n        if(Object.keys(this.props.latestPrice).length > 0 \n            && this.props.stocks.length >0){\n            \n            return this.props.stocks.reduce((acc,e)=>{   \n                let price = this.props.latestPrice[e.stock_symbol];\n                if(!price){\n                    price = e.price;\n                }else{\n                    price = this.props.latestPrice[e.stock_symbol].price\n                }\n                return acc+ price*e.quantity \n            }, 0);\n        }\n        return 0;\n    }\n\n    render() {\n        return (\n            <div className=\"stock-table\">\n                <h2>Total Value: ${this.total().toFixed(2)}</h2>\n                \n                  <Table >\n                    <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Symbol</Table.HeaderCell>\n                        <Table.HeaderCell>Shares</Table.HeaderCell>\n                        <Table.HeaderCell>Close($)</Table.HeaderCell>\n                        <Table.HeaderCell>Current($)</Table.HeaderCell>\n                        <Table.HeaderCell>Value($)</Table.HeaderCell>\n                    </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                    {this.generateTables()}\n                    </Table.Body>\n                </Table>\n                \n            </div>\n        );\n    }\n}\n\nexport default StockList;","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { scaleTime } from \"d3-scale\";\nimport { curveMonotoneX } from \"d3-shape\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { AreaSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { createVerticalLinearGradient, hexToRGBA } from \"react-stockcharts/lib/utils\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport {\n\tCrossHairCursor,\n\tMouseCoordinateX,\n\tMouseCoordinateY\n} from \"react-stockcharts/lib/coordinates\";\n\nconst canvasGradient = createVerticalLinearGradient([\n\t{ stop: 0, color: hexToRGBA(\"#b5d0ff\", 0.2) },\n\t{ stop: 0.7, color: hexToRGBA(\"#6fa4fc\", 0.4) },\n\t{ stop: 1, color: hexToRGBA(\"#4286f4\", 0.8) },\n]);\n\nclass AreaChart extends React.Component {\n\trender() {\n        const { data, type, width, ratio, symbol } = this.props;\n        const date = new Date(data[data.length -1].date);\n        const beginDate = new Date(data[0].date);\n\t\treturn (\n\t\t\t<ChartCanvas ratio={ratio} width={width} height={400}\n\t\t\t\tmargin={{ left: 50, right: 50, top: 10, bottom: 30 }}\n\t\t\t\tseriesName={symbol}\n\t\t\t\tdata={data} type={type}\n\t\t\t\txAccessor={d => d.date}\n\t\t\t\txScale={scaleTime()}\n\t\t\t\txExtents={[beginDate, date]}\n\t\t\t>\n\t\t\t\t<Chart id={0} yExtents={d => d.close}>\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<linearGradient id=\"MyGradient\" x1=\"0\" y1=\"100%\" x2=\"0\" y2=\"0%\">\n\t\t\t\t\t\t\t<stop offset=\"0%\" stopColor=\"#b5d0ff\" stopOpacity={0.2} />\n\t\t\t\t\t\t\t<stop offset=\"70%\" stopColor=\"#6fa4fc\" stopOpacity={0.4} />\n\t\t\t\t\t\t\t<stop offset=\"100%\"  stopColor=\"#4286f4\" stopOpacity={0.8} />\n\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t</defs>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n                    <MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")}\n\t\t\t\t\t/>\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")}\n\t\t\t\t\t/>\n\t\t\t\t\t<AreaSeries\n\t\t\t\t\t\tyAccessor={d => d.close}\n\t\t\t\t\t\tfill=\"url(#MyGradient)\"\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\tinterpolation={curveMonotoneX}\n\t\t\t\t\t\tcanvasGradient={canvasGradient}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n                <CrossHairCursor />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\n\nAreaChart.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nAreaChart.defaultProps = {\n\ttype: \"svg\",\n};\nAreaChart = fitWidth(AreaChart);\n\nexport default AreaChart;","import React, { Component } from 'react';\nimport StockChart from './StockChart';\n\n\nclass ChartContainer extends Component {\n\n\n\n    shouldComponentUpdate(nextProps){\n        if(nextProps.symbol !== this.props.symbol \n            || this.isDataChange(nextProps.data, this.props.data)){\n            \n                return true;\n        }\n        return false;\n    }\n\n    isDataChange=(next, now)=>{\n        if(next.length !== now.length) return true;\n        if(next.length >0 && now.length >0)\n            if(next[0].close !== now[0].close)\n                return true;\n        return false;\n    }\n\n\n    render() {\n\t\tif (this.props.data.length < 1 || this.props.symbol === \"\") {\n\t\t\treturn <div></div>\n        }\n        const {symbol} = this.props;\n\t\treturn (\n            <div className=\"small-stock-chart\" >\n            <h3>Stock Symbol:  {symbol}</h3>\n\t\t\t<StockChart data={this.props.data} symbol={symbol}/>\n            </div>\n\t\t)\n\t}\n}\n\nexport default ChartContainer;","\n// import { tsvParse } from  \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\n\n\nconst parseDate = timeParse(\"%Y-%m-%d\");\n\nexport function parseData(data){\n    return data.map( e=> {return {...e, \"date\":parseDate(e.date)}});\n}","import React, { Component } from 'react';\nimport { Grid, Segment, Divider } from 'semantic-ui-react';\nimport debounce from 'lodash/debounce';\nimport BuySellFrom from './BuySellForm';\nimport { sendTrade, handleErrors,fetchBatchQuote , getChart} from '../Adapter';\nimport StockList from './StockList';\nimport ChartContainer from './ChartContainer';\nimport { parseData } from '../Utility';\n\n\n\nclass Portfolio extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state={\n            stocks:[],\n            latestPrice:{},\n            chartData:[],\n            validSell:false,\n            validBuy:false,\n            symbol:null,\n        }\n    }\n    componentDidMount(){\n        this.setState({stocks:this.props.stocks}, this.getPrice)\n        this.interval = setInterval(this.updateLatestPrice, 50000);\n\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.interval);\n        this.setState({\n            stocks:[],\n            latestPrice:{},\n            validSell:false,\n            validBuy:false,\n        })\n    }\n\n    //deep compare fn to check quantity change\n    componentDidUpdate(prevProps, prevState){\n        if(this.isUpdateNeeded(prevProps)){\n            this.setState({ stocks:[...this.props.stocks]}, this.getPrice)\n        }\n        if(prevState.symbol !== this.state.symbol){\n            if(this.state.symbol !==\"\"){\n                console.log(this.state.symbol)\n                this.getChartData(this.state.symbol)\n            }else \n                this.setState({chartData:[]})\n        }   \n    }\n\n    isUpdateNeeded=(prevProps)=>{\n        if(prevProps.stocks.length !== this.props.stocks.length)\n            return true;\n        let changed = false;\n        this.props.stocks.forEach((e,i)=>{\n            if(prevProps.stocks[i].quantity !== e.quantity)\n                changed=true;\n        })\n        return changed;\n    }\n\n\n    getChartData=debounce((symbol)=>{\n        getChart(symbol)\n        .then(handleErrors)\n        .then( d=> {\n            let data = parseData(d);\n            this.setState({chartData:data})\n        })\n        .catch(e=>{\n            this.setState({chartData:[]})\n            console.log(\"invalid symbol\");\n        })\n    },3000)\n\n\n    getPrice=()=>{\n        this.getOpenPrice();\n    }\n    \n    getOpenPrice=()=>{\n        const symbols=this.state.stocks.map(e=>e.stock_symbol);\n        fetchBatchQuote(symbols)\n            .then(handleErrors)\n            .then(this.storePriceToState)\n            .catch(()=>console.log(\"fetchBathQuote ERROR!\"))\n    }\n\n    storePriceToState=(data)=>{\n        let result =[];\n        let latestPrice = {};\n        this.state.stocks.forEach(e=>{\n            result.push({...e, \n                openPrice:data[e.stock_symbol].quote.previousClose, \n                price:data[e.stock_symbol].quote.latestPrice\n            })\n            latestPrice[e.stock_symbol]={price:data[e.stock_symbol].quote.latestPrice}\n        })\n        this.setState({stocks:result, latestPrice})\n    }\n    \n    buyStock=(sym, quantity, price)=>{\n        const token = localStorage.getItem('token');\n        const trade ={sym, quantity, price, action:\"BUY\"};\n        sendTrade(trade, this.props.userID, token)\n        .then(handleErrors)\n        .then(this.props.afterTrade)\n        .then(()=>this.validateButtons(sym, quantity, price))        \n        .catch(()=>console.log(\"ERROR!Transaction Failed!\"))\n        console.log(\"buystock\")\n    }\n\n    sellStock=(sym, quantity, price)=>{\n        console.log(\"sell stock\", sym, quantity, price)\n        const token = localStorage.getItem('token');\n        const trade ={sym, quantity, price, action:\"SELL\"};\n        sendTrade(trade, this.props.userID, token)\n        .then(handleErrors)\n        .then(this.props.afterTrade)\n        .then(()=>this.validateButtons(sym, quantity, price))\n        .catch(()=>console.log(\"ERROR!Transaction Failed!\"))\n\n    }\n\n    validateButtons=(sym, quantity, price)=>{\n        this.validateBuy(sym, quantity, price);\n        this.validateSell(sym, quantity);\n    }\n\n    validateBuy=(symbol,n, price)=>{\n        if(n > 0 && n*price < this.props.balance && symbol !==\"\"){\n            this.setState({validBuy:true, symbol});\n        }else{\n            this.setState({validBuy:false, symbol});\n        }\n    }\n\n    validateSell=(symbol, n)=>{\n        let valid = false;\n        this.state.stocks.forEach( e=>{\n            if(e.stock_symbol === symbol && e.quantity >= n && n >0){\n                valid = true;\n                return\n            }\n        })\n        this.setState({validSell:valid, symbol})\n    }\n\n\n    render() {\n        return (\n            <div className=\"portfolio-container\">\n                <Grid columns={2} relaxed>\n                    <Grid.Column>\n                    <Segment basic>\n                        <StockList \n                            stocks={this.state.stocks}\n                            latestPrice={this.state.latestPrice}\n                        />\n                    \n                    </Segment>\n                    </Grid.Column>\n                    <Divider vertical>|</Divider>\n                    <Grid.Column>\n                    <Segment basic>\n                        <BuySellFrom\n                            handleBuy={this.buyStock}\n                            handleSell={this.sellStock}\n                            balance={this.props.balance}                            \n                            selected = {null}\n                            validBuy = {this.state.validBuy}\n                            validateBuy={this.validateBuy}\n                            validSell = {this.state.validSell}\n                            validateSell = {this.validateSell}\n                            searchData={this.props.searchData}\n\n                        />\n                    </Segment>\n                    <ChartContainer symbol={this.state.symbol} data={this.state.chartData}/>\n\n                    </Grid.Column>\n                </Grid>\n                \n            </div>\n        );\n    }\n}\n\nexport default Portfolio;","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tStraightLine,\n\tCandlestickSeries,\n\tLineSeries,\n\tStochasticSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tMovingAverageTooltip,\n\tStochasticTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema, stochasticOscillator } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\n\nconst stoAppearance = {\n\tstroke: Object.assign({},\n\t\tStochasticSeries.defaultProps.stroke)\n};\n\nclass CandleStickChartWithFullStochasticsIndicator extends React.Component {\n\trender() {\n\t\tconst height = 750;\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\t\tconst margin = { left: 70, right: 70, top: 20, bottom: 30 };\n\n\t\tconst gridHeight = height - margin.top - margin.bottom;\n\t\tconst gridWidth = width - margin.left - margin.right;\n\n\t\tconst showGrid = true;\n\t\tconst yGrid = showGrid ? { innerTickSize: -1 * gridWidth, tickStrokeOpacity: 0.1 } : {};\n\t\tconst xGrid = showGrid ? { innerTickSize: -1 * gridHeight, tickStrokeOpacity: 0.1 } : {};\n\n\t\tconst ema20 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 20 })\n\t\t\t.merge((d, c) => {d.ema20 = c;})\n\t\t\t.accessor(d => d.ema20);\n\n\t\tconst ema50 = ema()\n\t\t\t.id(2)\n\t\t\t.options({ windowSize: 50 })\n\t\t\t.merge((d, c) => {d.ema50 = c;})\n\t\t\t.accessor(d => d.ema50);\n\n\t\tconst slowSTO = stochasticOscillator()\n\t\t\t.options({ windowSize: 14, kWindowSize: 3 })\n\t\t\t.merge((d, c) => {d.slowSTO = c;})\n\t\t\t.accessor(d => d.slowSTO);\n\t\tconst fastSTO = stochasticOscillator()\n\t\t\t.options({ windowSize: 14, kWindowSize: 1 })\n\t\t\t.merge((d, c) => {d.fastSTO = c;})\n\t\t\t.accessor(d => d.fastSTO);\n\t\tconst fullSTO = stochasticOscillator()\n\t\t\t.options({ windowSize: 14, kWindowSize: 3, dWindowSize: 4 })\n\t\t\t.merge((d, c) => {d.fullSTO = c;})\n\t\t\t.accessor(d => d.fullSTO);\n\n\t\tconst calculatedData = ema20(ema50(slowSTO(fastSTO(fullSTO(initialData)))));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst start = xAccessor(last(data));\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\n\t\tconst xExtents = [start, end];\n\t\treturn (\n\t\t\t<ChartCanvas height={750}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={margin}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t\txExtents={xExtents}\n\t\t\t>\n\t\t\t\t<Chart id={1} height={325}\n\t\t\t\t\tyExtents={d => [d.high, d.low]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} {...yGrid}/>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\n\t\t\t\t\t<CandlestickSeries />\n\n\t\t\t\t\t<LineSeries yAccessor={ema20.accessor()} stroke={ema20.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema50.accessor()} stroke={ema50.stroke()}/>\n\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema20.accessor()} fill={ema20.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema50.accessor()} fill={ema50.stroke()} />\n\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.close} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"}/>\n\n\t\t\t\t\t<StraightLine type=\"vertical\" xValue={608} />;\n\t\t\t\t\t<StraightLine type=\"vertical\" xValue={558} strokeDasharray=\"Dot\" />;\n\t\t\t\t\t<StraightLine type=\"vertical\" xValue={578} strokeDasharray=\"LongDash\" />;\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, -10]}/>\n\t\t\t\t\t<MovingAverageTooltip\n\t\t\t\t\t\tonClick={e => console.log(e)}\n\t\t\t\t\t\torigin={[-38, 5]}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema20.accessor(),\n\t\t\t\t\t\t\t\ttype: ema20.type(),\n\t\t\t\t\t\t\t\tstroke: ema20.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema20.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema50.accessor(),\n\t\t\t\t\t\t\t\ttype: ema50.type(),\n\t\t\t\t\t\t\t\tstroke: ema50.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema50.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={2}\n\t\t\t\t\tyExtents={d => d.volume}\n\t\t\t\t\theight={100} origin={(w, h) => [0, h - 475]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={3}\n\t\t\t\t\tyExtents={[0, 100]}\n\t\t\t\t\theight={125} origin={(w, h) => [0, h - 375]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\"\n\t\t\t\t\t\ttickValues={[20, 50, 80]} />\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\n\t\t\t\t\t<StochasticSeries\n\t\t\t\t\t\tyAccessor={d => d.fastSTO}\n\t\t\t\t\t\t{...stoAppearance} />\n\t\t\t\t\t<StochasticTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.slowSTO}\n\t\t\t\t\t\toptions={slowSTO.options()}\n\t\t\t\t\t\tappearance={stoAppearance}\n\t\t\t\t\t\tlabel=\"Slow STO\" />\n\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={4}\n\t\t\t\t\tyExtents={[0, 100]}\n\t\t\t\t\theight={125} origin={(w, h) => [0, h - 250]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\"\n\t\t\t\t\t\ttickValues={[20, 50, 80]} />\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\n\t\t\t\t\t<StochasticSeries\n\t\t\t\t\t\tyAccessor={d => d.slowSTO}\n\t\t\t\t\t\t{...stoAppearance} />\n\n\t\t\t\t\t<StochasticTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.fastSTO}\n\t\t\t\t\t\toptions={fastSTO.options()}\n\t\t\t\t\t\tappearance={stoAppearance}\n\t\t\t\t\t\tlabel=\"Fast STO\" />\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={5}\n\t\t\t\t\tyExtents={[0, 100]}\n\t\t\t\t\theight={125} origin={(w, h) => [0, h - 125]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" {...xGrid} />\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\"\n\t\t\t\t\t\ttickValues={[20, 50, 80]} />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t<StochasticSeries\n\t\t\t\t\t\tyAccessor={d => d.fullSTO}\n\t\t\t\t\t\t{...stoAppearance} />\n\n\t\t\t\t\t<StochasticTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.fullSTO}\n\t\t\t\t\t\toptions={fullSTO.options()}\n\t\t\t\t\t\tappearance={stoAppearance}\n\t\t\t\t\t\tlabel=\"Full STO\" />\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\nCandleStickChartWithFullStochasticsIndicator.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithFullStochasticsIndicator.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithFullStochasticsIndicator = fitWidth(CandleStickChartWithFullStochasticsIndicator);\n\nexport default CandleStickChartWithFullStochasticsIndicator;\n","import React, { Component } from 'react';\nimport { chartRange } from '../Adapter';\nimport { Button } from 'semantic-ui-react'\nimport { v4 } from 'uuid';\n\n\n\nclass RangePicker extends Component {\n\n    handleClick=(event, {name})=>{\n        this.props.selectRange(name);\n    }\n\n    generateButton =()=>{\n        return chartRange.map(e=>{\n            return <Button key={v4()} onClick={this.handleClick} name={e}>{e.toUpperCase()}</Button>\n        })\n    }\n    render() {\n\n        return (\n            <div>\n                  <Button.Group>\n                    {this.generateButton()}\n                </Button.Group>\n            </div>\n        );\n    }\n}\n\nexport default RangePicker;","import React, { Component } from 'react';\nimport MainChart from './MainChart';\nimport { parseData } from '../Utility';\nimport { handleErrors , getChart} from '../Adapter';\nimport RangePicker from './RangePicker';\nimport AutoSearch from './AutoSearch';\nimport debounce from 'lodash/debounce';\n\n\nclass MainChartContainer extends Component {\n    state={\n        chartData: [],\n        range:\"6m\",\n        symbol:'aapl'\n    }\n\n    componentDidMount(){\n        this.getChartData(this.state.symbol)\n    }\n\n    selectRange=(range)=>{\n        console.log(\"range\", range)\n        this.setState({range}, ()=>this.getChartData(this.state.symbol, range))\n    }\n\n    setSymbol=(symbol)=>{\n        this.setState({symbol}, ()=>this.getChartData(this.state.symbol))\n    }\n\n    getChartData= debounce((symbol, range=\"6m\")=>{\n        // console.log(\"gets called\", symbol)\n        getChart(symbol, range)\n        .then(handleErrors)\n        .then( d=> {\n            let data = parseData(d);\n            // console.log(data)\n            this.setState({chartData:data})\n        })\n        .catch(e=>{\n            this.setState({chartData:[]})\n            console.log(\"invalid symbol\");\n        })\n    }, 500)\n\n\n    render() {\n        // console.log( this.state.chartData.length)\n        return (\n            <div>\n                <AutoSearch    setSymbol={this.setSymbol}\n                    searchData = {this.props.searchData}/>\n\n                {this.state.chartData.length > 0?\n                <div>\n                <RangePicker selectRange={this.selectRange}/>\n                <MainChart data={this.state.chartData}/>\n                </div>\n                : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default MainChartContainer;","import React, { Component } from 'react';\nimport { fetchUserInfo, handleErrors, getSymbols  } from '../Adapter';\nimport NavBar from './Navbar';\nimport Home from './Home';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Trades from './Trades';\nimport Portfolio from './Portfolio';\nimport MainChartContainer from './MainChartContainer';\n\nclass Container extends Component {\n    state = { \n        activeItem: 'home',\n        userID:null,\n        userEmail:null,\n        userName:null,\n        stocks:[],\n        balance:null,\n        searchData:[]\n     }\n\n     componentDidMount(){\n        this.checkToken()\n        this.getAllSymbols()\n     }\n\n     componentWillUnmount(){\n        this.clearState();\n     }\n\n     clearState=()=>{\n        this.setState({\n            activeItem: 'home',\n            userID:null,\n            userEmail:null,\n            userName:null,\n            stocks:[],\n            balance:null\n         })\n     }\n\n     getAllSymbols=()=>{\n        getSymbols()\n            .then(handleErrors)\n            .then(data=> this.setState({searchData: data.map(this.parseSymbols)}))\n            .catch(()=> console.log(\"FETCH SYMBOLS ERROR!!!\"))\n     }\n\n     parseSymbols=(data)=>{\n         return {\n             title:data.symbol,\n             name:data.name\n         }\n     }\n\n     afterTrade=(data)=>{\n         const userInfo={id:this.state.userID, email:this.state.userEmail};\n         this.saveDataToState(data, userInfo);\n     }\n\n\n\n     checkToken=()=>{\n        let token = localStorage.getItem('token');\n        if(token){\n            this.parseToken(token)\n        }else{\n            this.clearState();\n        }\n     }\n\n     saveDataToState=(data, userInfo)=>{\n        this.setState({\n            userID:userInfo.id,\n            userEmail:userInfo.email,\n            userName:data.user.charAt(0).toUpperCase() + data.user.slice(1),\n            stocks:data.stocks,\n            balance:data.balance\n\n        },()=> console.log())\n     }\n\n     parseToken=(token)=>{\n         let userInfo = JSON.parse(atob(token.split(\".\")[1]))\n\n         fetchUserInfo(token, userInfo.id)\n            .then(handleErrors)\n            .then((d)=> this.saveDataToState(d, userInfo))\n            .catch(d=>console.log(\"TOKEN ERROR! CANT FETCH USER INFO!\"))\n         console.log()\n     }\n    \n    handleBackHome=()=>{\n        this.setState({activeItem:'home'}, ()=>this.checkToken())\n    }\n\n    handleLogout=()=>{\n        localStorage.removeItem('token');\n        this.checkToken();\n    }\n\n    handleMenu=(name) => this.setState({ activeItem: name })\n\n\n    displayContent=() =>{\n\n        switch (this.state.activeItem) {\n            case \"home\":\n                return < Home \n                    userID={this.state.userID}\n                    userName={this.state.userName}\n                    searchData={this.state.searchData}\n                    />\n\n            case \"portfolio\":\n                if(!this.state.userID) return < Home />;\n                return < Portfolio \n                            balance={this.state.balance}\n                            userID={this.state.userID}\n                            stocks={this.state.stocks} \n                            searchData={this.state.searchData}\n                            afterTrade={this.afterTrade}/>\n            case \"charts\":\n                if(!this.state.userID) return < Home />;\n                return <MainChartContainer \n                    searchData={this.state.searchData}\n                    />;\n            case \"trades\":\n                if(!this.state.userID) return < Home />;\n\n                return < Trades userID={this.state.userID}\n                        />\n\n            case \"login\":\n                return < Login backToHome={this.handleBackHome}/>\n\n            case \"signup\":\n                return < Signup backToHome={this.handleBackHome}/>\n\n            default: \n                return < Home />\n        }\n    }\n\n\n\n    render() {\n        \n        return (\n            <div>\n                <NavBar \n                    handleMenu={this.handleMenu}\n                    activeItem={this.state.activeItem}\n                    userName={this.state.userName}\n                    handleLogout={this.handleLogout}\n\n                    />\n                \n                {this.displayContent()}\n            </div>\n        );\n    }\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport './App.css';\nimport Container from './components/Container'\n// import NavBar from './components/Navbar'\n\nclass App extends Component {\n  render() {\n    const height = window.innerHeight;\n    return (\n      <div className=\"App\" style={{height}}>\n \n        <Container />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}